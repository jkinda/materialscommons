{
  "reportTitle": "materialscommons.org",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 10,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2017-02-03T20:47:16.374Z",
    "end": "2017-02-03T20:47:20.704Z",
    "duration": 4330,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Feature - directories: ",
        "suites": [
          {
            "title": "Top level directory",
            "suites": [],
            "tests": [
              {
                "title": "fetch top level directory from project",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory from project",
                "timedOut": false,
                "duration": 99,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "f858dcaf-238e-4e36-844e-f91e6730f674",
                "parentUUID": "29636b5c-139d-4f7d-8cd0-47ffeda4037b",
                "skipped": false
              },
              {
                "title": "fetch top level directory by id",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory by id",
                "timedOut": false,
                "duration": 141,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "42086986-356b-44cb-962a-ea9f86cd4021",
                "parentUUID": "29636b5c-139d-4f7d-8cd0-47ffeda4037b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "29636b5c-139d-4f7d-8cd0-47ffeda4037b",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "fetch top level directory from project",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory from project",
                "timedOut": false,
                "duration": 99,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "f858dcaf-238e-4e36-844e-f91e6730f674",
                "parentUUID": "29636b5c-139d-4f7d-8cd0-47ffeda4037b",
                "skipped": false
              },
              {
                "title": "fetch top level directory by id",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory by id",
                "timedOut": false,
                "duration": 141,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "42086986-356b-44cb-962a-ea9f86cd4021",
                "parentUUID": "29636b5c-139d-4f7d-8cd0-47ffeda4037b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 240
          },
          {
            "title": "Create directory",
            "suites": [],
            "tests": [
              {
                "title": "create directory path from top directory as /",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as /",
                "timedOut": false,
                "duration": 229,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "342b4279-d322-4e28-94d2-d15d57536ed7",
                "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
                "skipped": false
              },
              {
                "title": "create directory path from top directory as id",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as id",
                "timedOut": false,
                "duration": 196,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "302130e8-a49d-4554-819e-3a7a26d9fa17",
                "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
                "skipped": false
              },
              {
                "title": "create directory path from directory as path",
                "fullTitle": "Feature - directories:  Create directory create directory path from directory as path",
                "timedOut": false,
                "duration": 251,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "d0a6b161-c94e-4d9a-84a7-cebfc1461533",
                "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "create directory path from top directory as /",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as /",
                "timedOut": false,
                "duration": 229,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "342b4279-d322-4e28-94d2-d15d57536ed7",
                "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
                "skipped": false
              },
              {
                "title": "create directory path from top directory as id",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as id",
                "timedOut": false,
                "duration": 196,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "302130e8-a49d-4554-819e-3a7a26d9fa17",
                "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
                "skipped": false
              },
              {
                "title": "create directory path from directory as path",
                "fullTitle": "Feature - directories:  Create directory create directory path from directory as path",
                "timedOut": false,
                "duration": 251,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "d0a6b161-c94e-4d9a-84a7-cebfc1461533",
                "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 676
          },
          {
            "title": "Get directories",
            "suites": [],
            "tests": [
              {
                "title": "Get all dirs in project and test for empty",
                "fullTitle": "Feature - directories:  Get directories Get all dirs in project and test for empty",
                "timedOut": false,
                "duration": 259,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c7a4e035-464c-49f8-8d60-2b107097785e",
                "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
                "skipped": false
              },
              {
                "title": "Subdir exists and test for empty",
                "fullTitle": "Feature - directories:  Get directories Subdir exists and test for empty",
                "timedOut": false,
                "duration": 446,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "a09a2e86-9a52-44e7-91af-f88789d80340",
                "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
                "skipped": false
              },
              {
                "title": "Get sub-directories as peer_directories",
                "fullTitle": "Feature - directories:  Get directories Get sub-directories as peer_directories",
                "timedOut": false,
                "duration": 218,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "ad9c88fe-0546-4f10-98d5-eca66baac12b",
                "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
                "skipped": false
              },
              {
                "title": "Find in project",
                "fullTitle": "Feature - directories:  Get directories Find in project",
                "timedOut": false,
                "duration": 191,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "a22adb08-20c4-4c33-a6e7-f56d70e155ab",
                "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "Get all dirs in project and test for empty",
                "fullTitle": "Feature - directories:  Get directories Get all dirs in project and test for empty",
                "timedOut": false,
                "duration": 259,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c7a4e035-464c-49f8-8d60-2b107097785e",
                "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
                "skipped": false
              },
              {
                "title": "Subdir exists and test for empty",
                "fullTitle": "Feature - directories:  Get directories Subdir exists and test for empty",
                "timedOut": false,
                "duration": 446,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "a09a2e86-9a52-44e7-91af-f88789d80340",
                "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
                "skipped": false
              },
              {
                "title": "Get sub-directories as peer_directories",
                "fullTitle": "Feature - directories:  Get directories Get sub-directories as peer_directories",
                "timedOut": false,
                "duration": 218,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "ad9c88fe-0546-4f10-98d5-eca66baac12b",
                "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
                "skipped": false
              },
              {
                "title": "Find in project",
                "fullTitle": "Feature - directories:  Get directories Find in project",
                "timedOut": false,
                "duration": 191,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "a22adb08-20c4-4c33-a6e7-f56d70e155ab",
                "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1114
          },
          {
            "title": "Modifiy directories",
            "suites": [],
            "tests": [
              {
                "title": "Rename dir",
                "fullTitle": "Feature - directories:  Modifiy directories Rename dir",
                "timedOut": false,
                "duration": 131,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "42914946-b0b5-4f39-8513-18bd00b1aa67",
                "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
                "skipped": false
              },
              {
                "title": "Move dir",
                "fullTitle": "Feature - directories:  Modifiy directories Move dir",
                "timedOut": false,
                "duration": 254,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "de14e82c-22eb-4659-8e41-12485633b30f",
                "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
                "skipped": false
              },
              {
                "title": "Delete dir",
                "fullTitle": "Feature - directories:  Modifiy directories Delete dir",
                "timedOut": false,
                "duration": 159,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "09c0bd6e-e5b2-42b2-a984-f694fd600bce",
                "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "847171be-b795-4299-8271-63b46d4d34c5",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "Rename dir",
                "fullTitle": "Feature - directories:  Modifiy directories Rename dir",
                "timedOut": false,
                "duration": 131,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "42914946-b0b5-4f39-8513-18bd00b1aa67",
                "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
                "skipped": false
              },
              {
                "title": "Move dir",
                "fullTitle": "Feature - directories:  Modifiy directories Move dir",
                "timedOut": false,
                "duration": 254,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "de14e82c-22eb-4659-8e41-12485633b30f",
                "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
                "skipped": false
              },
              {
                "title": "Delete dir",
                "fullTitle": "Feature - directories:  Modifiy directories Delete dir",
                "timedOut": false,
                "duration": 159,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "09c0bd6e-e5b2-42b2-a984-f694fd600bce",
                "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 544
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/specs/directories-spec.js",
        "uuid": "5578a86e-c39f-427e-9a07-65ff073cfa31",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - projects: ",
        "suites": [
          {
            "title": "Create project",
            "suites": [],
            "tests": [
              {
                "title": "create project and get project back",
                "fullTitle": "Feature - projects:  Create project create project and get project back",
                "timedOut": false,
                "duration": 69,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "141720b8-44d8-4889-8a25-a4e35abbc564",
                "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
                "skipped": false
              },
              {
                "title": "create project and find project in all projects",
                "fullTitle": "Feature - projects:  Create project create project and find project in all projects",
                "timedOut": false,
                "duration": 96,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "7cbafd63-4363-44fc-b36a-954e80f6a1f6",
                "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
                "skipped": false
              },
              {
                "title": "create project and find project by user",
                "fullTitle": "Feature - projects:  Create project create project and find project by user",
                "timedOut": false,
                "duration": 118,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "303a65b7-8546-4299-a9b8-10bfd6e4f264",
                "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
                "skipped": false
              },
              {
                "title": "create project, find by user, has full set of properties",
                "fullTitle": "Feature - projects:  Create project create project, find by user, has full set of properties",
                "timedOut": false,
                "duration": 87,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "bc8dd364-f559-4ec4-82b9-55b65af9deb4",
                "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/projects-spec.js",
            "uuid": "90481df7-085e-40b4-bd29-685551f48764",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/projects-spec.js",
            "passes": [
              {
                "title": "create project and get project back",
                "fullTitle": "Feature - projects:  Create project create project and get project back",
                "timedOut": false,
                "duration": 69,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "141720b8-44d8-4889-8a25-a4e35abbc564",
                "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
                "skipped": false
              },
              {
                "title": "create project and find project in all projects",
                "fullTitle": "Feature - projects:  Create project create project and find project in all projects",
                "timedOut": false,
                "duration": 96,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "7cbafd63-4363-44fc-b36a-954e80f6a1f6",
                "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
                "skipped": false
              },
              {
                "title": "create project and find project by user",
                "fullTitle": "Feature - projects:  Create project create project and find project by user",
                "timedOut": false,
                "duration": 118,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "303a65b7-8546-4299-a9b8-10bfd6e4f264",
                "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
                "skipped": false
              },
              {
                "title": "create project, find by user, has full set of properties",
                "fullTitle": "Feature - projects:  Create project create project, find by user, has full set of properties",
                "timedOut": false,
                "duration": 87,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "bc8dd364-f559-4ec4-82b9-55b65af9deb4",
                "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 370
          },
          {
            "title": "Update project",
            "suites": [],
            "tests": [
              {
                "title": "create project, update name and description",
                "fullTitle": "Feature - projects:  Update project create project, update name and description",
                "timedOut": false,
                "duration": 92,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "abf99abf-0d96-49a4-afd9-b5d8214ce6ea",
                "parentUUID": "4f6499ab-ea4d-427d-bce8-9360c5cb45d0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/projects-spec.js",
            "uuid": "4f6499ab-ea4d-427d-bce8-9360c5cb45d0",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/projects-spec.js",
            "passes": [
              {
                "title": "create project, update name and description",
                "fullTitle": "Feature - projects:  Update project create project, update name and description",
                "timedOut": false,
                "duration": 92,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "abf99abf-0d96-49a4-afd9-b5d8214ce6ea",
                "parentUUID": "4f6499ab-ea4d-427d-bce8-9360c5cb45d0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 92
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/specs/projects-spec.js",
        "uuid": "0f154318-108f-4af3-b10f-d202bda66263",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/projects-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - reset lost password: ",
        "suites": [
          {
            "title": "User with reset_password flag",
            "suites": [],
            "tests": [
              {
                "title": "there is a user for testing",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag there is a user for testing",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "84f9e0a1-234a-45cf-a945-820cbef8aa1f",
                "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
                "skipped": false
              },
              {
                "title": "User with the reset password flag set",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User with the reset password flag set",
                "timedOut": false,
                "duration": 21,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "437e193b-8e52-481f-a0ad-54a28a8941c6",
                "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
                "skipped": false
              },
              {
                "title": "User reset password flag is cleared",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User reset password flag is cleared",
                "timedOut": false,
                "duration": 35,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "d5087483-628c-4da9-874d-c86a8cbcbc61",
                "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/reset-lost-password-spec.js",
            "uuid": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/reset-lost-password-spec.js",
            "passes": [
              {
                "title": "there is a user for testing",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag there is a user for testing",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "84f9e0a1-234a-45cf-a945-820cbef8aa1f",
                "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
                "skipped": false
              },
              {
                "title": "User with the reset password flag set",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User with the reset password flag set",
                "timedOut": false,
                "duration": 21,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "437e193b-8e52-481f-a0ad-54a28a8941c6",
                "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
                "skipped": false
              },
              {
                "title": "User reset password flag is cleared",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User reset password flag is cleared",
                "timedOut": false,
                "duration": 35,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "d5087483-628c-4da9-874d-c86a8cbcbc61",
                "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 57
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/specs/reset-lost-password-spec.js",
        "uuid": "d049c038-645e-4bbf-b5e0-689b27853931",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/reset-lost-password-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "9f7c9855-4b10-4df9-a3d1-f81e118dd158",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "fetch top level directory from project",
      "fullTitle": "Top level directory fetch top level directory from project",
      "timedOut": false,
      "duration": 99,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "fcb35213-9052-4d47-b17f-db5823aefbe2",
      "parentUUID": "29636b5c-139d-4f7d-8cd0-47ffeda4037b",
      "skipped": false
    },
    {
      "title": "fetch top level directory by id",
      "fullTitle": "Top level directory fetch top level directory by id",
      "timedOut": false,
      "duration": 141,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "c85ae305-0dd5-43c6-b79c-c1345a2becc7",
      "parentUUID": "29636b5c-139d-4f7d-8cd0-47ffeda4037b",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as /",
      "fullTitle": "Create directory create directory path from top directory as /",
      "timedOut": false,
      "duration": 229,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "e812761e-1f81-498a-b0c3-08ea4e2b4a27",
      "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as id",
      "fullTitle": "Create directory create directory path from top directory as id",
      "timedOut": false,
      "duration": 196,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "4d8de6dd-1e3b-46bc-a46d-47935dabcd5c",
      "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
      "skipped": false
    },
    {
      "title": "create directory path from directory as path",
      "fullTitle": "Create directory create directory path from directory as path",
      "timedOut": false,
      "duration": 251,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "7eff9d59-f938-443f-aa14-6bc702fd180f",
      "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
      "skipped": false
    },
    {
      "title": "Get all dirs in project and test for empty",
      "fullTitle": "Get directories Get all dirs in project and test for empty",
      "timedOut": false,
      "duration": 259,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "2973be8d-7395-41ae-be15-89e155a96bde",
      "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
      "skipped": false
    },
    {
      "title": "Subdir exists and test for empty",
      "fullTitle": "Get directories Subdir exists and test for empty",
      "timedOut": false,
      "duration": 446,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "8bf57fde-b983-46e1-9a59-6424339c2777",
      "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
      "skipped": false
    },
    {
      "title": "Get sub-directories as peer_directories",
      "fullTitle": "Get directories Get sub-directories as peer_directories",
      "timedOut": false,
      "duration": 218,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "b04067d7-f3de-4a31-8302-d4039f2f37b4",
      "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
      "skipped": false
    },
    {
      "title": "Find in project",
      "fullTitle": "Get directories Find in project",
      "timedOut": false,
      "duration": 191,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "53544aef-0c69-4a94-b675-e7d99d651a98",
      "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
      "skipped": false
    },
    {
      "title": "Rename dir",
      "fullTitle": "Modifiy directories Rename dir",
      "timedOut": false,
      "duration": 131,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "d43d82ef-6256-482f-9e2d-0a1dd506a056",
      "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
      "skipped": false
    },
    {
      "title": "Move dir",
      "fullTitle": "Modifiy directories Move dir",
      "timedOut": false,
      "duration": 254,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "a4df210a-afa8-4b14-b332-ffd873fb65c2",
      "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
      "skipped": false
    },
    {
      "title": "Delete dir",
      "fullTitle": "Modifiy directories Delete dir",
      "timedOut": false,
      "duration": 159,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "9a220b17-49f6-45c9-840c-679c5e9a758b",
      "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
      "skipped": false
    },
    {
      "title": "create project and get project back",
      "fullTitle": "Create project create project and get project back",
      "timedOut": false,
      "duration": 69,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "345edaa4-2203-4fc6-9589-b329766b3da4",
      "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
      "skipped": false
    },
    {
      "title": "create project and find project in all projects",
      "fullTitle": "Create project create project and find project in all projects",
      "timedOut": false,
      "duration": 96,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "b8c84e66-7d90-4bda-9447-03ba9a7edc3e",
      "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
      "skipped": false
    },
    {
      "title": "create project and find project by user",
      "fullTitle": "Create project create project and find project by user",
      "timedOut": false,
      "duration": 118,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "9fc3dcac-594c-4b31-afb1-42c1462b2319",
      "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
      "skipped": false
    },
    {
      "title": "create project, find by user, has full set of properties",
      "fullTitle": "Create project create project, find by user, has full set of properties",
      "timedOut": false,
      "duration": 87,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "26187a53-5724-4187-b36d-48dd8cc439a7",
      "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
      "skipped": false
    },
    {
      "title": "create project, update name and description",
      "fullTitle": "Update project create project, update name and description",
      "timedOut": false,
      "duration": 92,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "512775d1-0b65-4159-b708-3b583f846d03",
      "parentUUID": "4f6499ab-ea4d-427d-bce8-9360c5cb45d0",
      "skipped": false
    },
    {
      "title": "there is a user for testing",
      "fullTitle": "User with reset_password flag there is a user for testing",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "1ef9792f-7fbb-4ba1-a5f4-b56b118dc4ff",
      "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
      "skipped": false
    },
    {
      "title": "User with the reset password flag set",
      "fullTitle": "User with reset_password flag User with the reset password flag set",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "74adbc1f-d697-4052-8dbb-5e5870b01523",
      "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
      "skipped": false
    },
    {
      "title": "User reset password flag is cleared",
      "fullTitle": "User with reset_password flag User reset password flag is cleared",
      "timedOut": false,
      "duration": 35,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "1ea0a64f-3d62-4026-aae5-9e0d738f0b78",
      "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "fetch top level directory from project",
      "fullTitle": "Top level directory fetch top level directory from project",
      "timedOut": false,
      "duration": 99,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "f20d29bd-e471-4eed-9cda-34cd131f1da7",
      "parentUUID": "29636b5c-139d-4f7d-8cd0-47ffeda4037b",
      "skipped": false
    },
    {
      "title": "fetch top level directory by id",
      "fullTitle": "Top level directory fetch top level directory by id",
      "timedOut": false,
      "duration": 141,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "f1843a39-c020-4541-9169-c4c3b33ea05e",
      "parentUUID": "29636b5c-139d-4f7d-8cd0-47ffeda4037b",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as /",
      "fullTitle": "Create directory create directory path from top directory as /",
      "timedOut": false,
      "duration": 229,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "66d7129d-6f2c-4f29-8cad-51b9edd226dc",
      "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as id",
      "fullTitle": "Create directory create directory path from top directory as id",
      "timedOut": false,
      "duration": 196,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "a2472dfc-51be-49f4-a15b-f79eba3c1168",
      "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
      "skipped": false
    },
    {
      "title": "create directory path from directory as path",
      "fullTitle": "Create directory create directory path from directory as path",
      "timedOut": false,
      "duration": 251,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "234455e9-d35b-4f7e-8afe-544eae12c8e0",
      "parentUUID": "a9ad17ea-65c3-4b34-a67b-3572693d3f3c",
      "skipped": false
    },
    {
      "title": "Get all dirs in project and test for empty",
      "fullTitle": "Get directories Get all dirs in project and test for empty",
      "timedOut": false,
      "duration": 259,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "c4b00c5a-1969-41ce-8282-8eeaa05edfb5",
      "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
      "skipped": false
    },
    {
      "title": "Subdir exists and test for empty",
      "fullTitle": "Get directories Subdir exists and test for empty",
      "timedOut": false,
      "duration": 446,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "388ab7d0-e111-4ed7-8857-15a25b7ded11",
      "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
      "skipped": false
    },
    {
      "title": "Get sub-directories as peer_directories",
      "fullTitle": "Get directories Get sub-directories as peer_directories",
      "timedOut": false,
      "duration": 218,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "c4301cf0-31d9-42ef-810e-c9ae4677c3eb",
      "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
      "skipped": false
    },
    {
      "title": "Find in project",
      "fullTitle": "Get directories Find in project",
      "timedOut": false,
      "duration": 191,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "f337fc0f-2b53-40ed-b262-d9f633338507",
      "parentUUID": "d1e46989-e6cc-4647-8028-73ea3b266d0e",
      "skipped": false
    },
    {
      "title": "Rename dir",
      "fullTitle": "Modifiy directories Rename dir",
      "timedOut": false,
      "duration": 131,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "3073f4a9-e2a2-406f-b4c2-49e28cfd3214",
      "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
      "skipped": false
    },
    {
      "title": "Move dir",
      "fullTitle": "Modifiy directories Move dir",
      "timedOut": false,
      "duration": 254,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "b58db599-f60f-4305-bde1-abbdc720bd68",
      "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
      "skipped": false
    },
    {
      "title": "Delete dir",
      "fullTitle": "Modifiy directories Delete dir",
      "timedOut": false,
      "duration": 159,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "08ff9947-53d5-439b-a704-b8f897c65481",
      "parentUUID": "847171be-b795-4299-8271-63b46d4d34c5",
      "skipped": false
    },
    {
      "title": "create project and get project back",
      "fullTitle": "Create project create project and get project back",
      "timedOut": false,
      "duration": 69,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "6d323b1e-fe3b-40f5-884b-7ff9ee096667",
      "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
      "skipped": false
    },
    {
      "title": "create project and find project in all projects",
      "fullTitle": "Create project create project and find project in all projects",
      "timedOut": false,
      "duration": 96,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "fb6dd4ad-e440-4215-8cfc-f1d241033cf6",
      "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
      "skipped": false
    },
    {
      "title": "create project and find project by user",
      "fullTitle": "Create project create project and find project by user",
      "timedOut": false,
      "duration": 118,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "5715b3e7-50e5-4e3d-a3fa-09cbf8771149",
      "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
      "skipped": false
    },
    {
      "title": "create project, find by user, has full set of properties",
      "fullTitle": "Create project create project, find by user, has full set of properties",
      "timedOut": false,
      "duration": 87,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "ceea68e6-8973-45b5-87e5-772def6f66a6",
      "parentUUID": "90481df7-085e-40b4-bd29-685551f48764",
      "skipped": false
    },
    {
      "title": "create project, update name and description",
      "fullTitle": "Update project create project, update name and description",
      "timedOut": false,
      "duration": 92,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "a93f2561-ed76-4bdd-9eb4-c2632271b971",
      "parentUUID": "4f6499ab-ea4d-427d-bce8-9360c5cb45d0",
      "skipped": false
    },
    {
      "title": "there is a user for testing",
      "fullTitle": "User with reset_password flag there is a user for testing",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "285db68a-351a-475d-96be-ff2e9f0ec946",
      "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
      "skipped": false
    },
    {
      "title": "User with the reset password flag set",
      "fullTitle": "User with reset_password flag User with the reset password flag set",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "704603dd-1dd2-4d2b-87f5-142704784e92",
      "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
      "skipped": false
    },
    {
      "title": "User reset password flag is cleared",
      "fullTitle": "User with reset_password flag User reset password flag is cleared",
      "timedOut": false,
      "duration": 35,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "e4d19107-2bf9-451a-8618-6962efd91f8a",
      "parentUUID": "6379dd9e-34ba-452f-8a14-05f9593d7fc8",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}
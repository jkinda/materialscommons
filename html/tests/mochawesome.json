{
  "reportTitle": "materialscommons.org",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 28,
    "tests": 29,
    "passes": 20,
    "pending": 9,
    "failures": 0,
    "start": "2017-02-03T23:32:59.976Z",
    "end": "2017-02-03T23:33:04.648Z",
    "duration": 4672,
    "testsRegistered": 29,
    "passPercent": 100,
    "pendingPercent": 31,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Feature - Datasets: ",
        "suites": [
          {
            "title": "Function level",
            "suites": [],
            "tests": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Datasets:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "aeb83548-f9e4-4ee8-96ed-cf0e27e75b91",
                "parentUUID": "6f1df67f-7438-4bdc-8d11-372378e6f2ff",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Datasets:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "aeb83548-f9e4-4ee8-96ed-cf0e27e75b91",
                "parentUUID": "6f1df67f-7438-4bdc-8d11-372378e6f2ff",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/datasets-spec.js",
            "uuid": "6f1df67f-7438-4bdc-8d11-372378e6f2ff",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/datasets-spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/datasets-spec.js",
        "uuid": "708bd0b2-6d44-4d74-b1a2-5b561fe183b3",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/datasets-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - directories: ",
        "suites": [
          {
            "title": "Top level directory",
            "suites": [],
            "tests": [
              {
                "title": "fetch top level directory from project",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory from project",
                "timedOut": false,
                "duration": 94,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c8e451b0-ea77-4ec5-9a3d-79899375c630",
                "parentUUID": "9581f349-e1d0-4fef-bdd2-b24ebaf19731",
                "skipped": false
              },
              {
                "title": "fetch top level directory by id",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory by id",
                "timedOut": false,
                "duration": 92,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "b9ad8256-a969-4189-9601-86ac66c9b561",
                "parentUUID": "9581f349-e1d0-4fef-bdd2-b24ebaf19731",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/directories-spec.js",
            "uuid": "9581f349-e1d0-4fef-bdd2-b24ebaf19731",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/directories-spec.js",
            "passes": [
              {
                "title": "fetch top level directory from project",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory from project",
                "timedOut": false,
                "duration": 94,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c8e451b0-ea77-4ec5-9a3d-79899375c630",
                "parentUUID": "9581f349-e1d0-4fef-bdd2-b24ebaf19731",
                "skipped": false
              },
              {
                "title": "fetch top level directory by id",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory by id",
                "timedOut": false,
                "duration": 92,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "b9ad8256-a969-4189-9601-86ac66c9b561",
                "parentUUID": "9581f349-e1d0-4fef-bdd2-b24ebaf19731",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 186
          },
          {
            "title": "Create directory",
            "suites": [],
            "tests": [
              {
                "title": "create directory path from top directory as /",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as /",
                "timedOut": false,
                "duration": 263,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c6f05455-3b3b-487c-86f1-3a730feaa48e",
                "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
                "skipped": false
              },
              {
                "title": "create directory path from top directory as id",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as id",
                "timedOut": false,
                "duration": 181,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "5a2dea3e-528d-49a0-94d6-7dc4bba8000a",
                "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
                "skipped": false
              },
              {
                "title": "create directory path from directory as path",
                "fullTitle": "Feature - directories:  Create directory create directory path from directory as path",
                "timedOut": false,
                "duration": 253,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "2baaa2ac-4342-4bc7-9f12-a5f160406642",
                "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/directories-spec.js",
            "uuid": "624d680f-ee9e-4748-8763-4bc19df9807d",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/directories-spec.js",
            "passes": [
              {
                "title": "create directory path from top directory as /",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as /",
                "timedOut": false,
                "duration": 263,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c6f05455-3b3b-487c-86f1-3a730feaa48e",
                "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
                "skipped": false
              },
              {
                "title": "create directory path from top directory as id",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as id",
                "timedOut": false,
                "duration": 181,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "5a2dea3e-528d-49a0-94d6-7dc4bba8000a",
                "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
                "skipped": false
              },
              {
                "title": "create directory path from directory as path",
                "fullTitle": "Feature - directories:  Create directory create directory path from directory as path",
                "timedOut": false,
                "duration": 253,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "2baaa2ac-4342-4bc7-9f12-a5f160406642",
                "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 697
          },
          {
            "title": "Get directories",
            "suites": [],
            "tests": [
              {
                "title": "Get all dirs in project and test for empty",
                "fullTitle": "Feature - directories:  Get directories Get all dirs in project and test for empty",
                "timedOut": false,
                "duration": 182,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "2f9cb49b-c408-4b7e-b368-9902ca5b353e",
                "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
                "skipped": false
              },
              {
                "title": "Subdir exists and test for empty",
                "fullTitle": "Feature - directories:  Get directories Subdir exists and test for empty",
                "timedOut": false,
                "duration": 149,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "fdb5bce4-0ec9-43b1-815a-9f424dcc7fca",
                "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
                "skipped": false
              },
              {
                "title": "Get sub-directories as peer_directories",
                "fullTitle": "Feature - directories:  Get directories Get sub-directories as peer_directories",
                "timedOut": false,
                "duration": 218,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "e71a0590-501e-4e20-be82-43b08756cf1a",
                "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
                "skipped": false
              },
              {
                "title": "Find in project",
                "fullTitle": "Feature - directories:  Get directories Find in project",
                "timedOut": false,
                "duration": 293,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "d9ce74a5-7919-40c5-8886-33b2d23d54be",
                "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/directories-spec.js",
            "uuid": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/directories-spec.js",
            "passes": [
              {
                "title": "Get all dirs in project and test for empty",
                "fullTitle": "Feature - directories:  Get directories Get all dirs in project and test for empty",
                "timedOut": false,
                "duration": 182,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "2f9cb49b-c408-4b7e-b368-9902ca5b353e",
                "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
                "skipped": false
              },
              {
                "title": "Subdir exists and test for empty",
                "fullTitle": "Feature - directories:  Get directories Subdir exists and test for empty",
                "timedOut": false,
                "duration": 149,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "fdb5bce4-0ec9-43b1-815a-9f424dcc7fca",
                "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
                "skipped": false
              },
              {
                "title": "Get sub-directories as peer_directories",
                "fullTitle": "Feature - directories:  Get directories Get sub-directories as peer_directories",
                "timedOut": false,
                "duration": 218,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "e71a0590-501e-4e20-be82-43b08756cf1a",
                "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
                "skipped": false
              },
              {
                "title": "Find in project",
                "fullTitle": "Feature - directories:  Get directories Find in project",
                "timedOut": false,
                "duration": 293,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "d9ce74a5-7919-40c5-8886-33b2d23d54be",
                "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 842
          },
          {
            "title": "Modifiy directories",
            "suites": [],
            "tests": [
              {
                "title": "Rename dir",
                "fullTitle": "Feature - directories:  Modifiy directories Rename dir",
                "timedOut": false,
                "duration": 262,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "043a5367-bd14-40d4-9bf1-a06c858810b5",
                "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
                "skipped": false
              },
              {
                "title": "Move dir",
                "fullTitle": "Feature - directories:  Modifiy directories Move dir",
                "timedOut": false,
                "duration": 204,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c7b20305-1324-4c88-8265-5234ae6eea86",
                "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
                "skipped": false
              },
              {
                "title": "Delete dir",
                "fullTitle": "Feature - directories:  Modifiy directories Delete dir",
                "timedOut": false,
                "duration": 263,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "cb4d816d-a587-4531-9493-de13c2e066a7",
                "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/directories-spec.js",
            "uuid": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/directories-spec.js",
            "passes": [
              {
                "title": "Rename dir",
                "fullTitle": "Feature - directories:  Modifiy directories Rename dir",
                "timedOut": false,
                "duration": 262,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "043a5367-bd14-40d4-9bf1-a06c858810b5",
                "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
                "skipped": false
              },
              {
                "title": "Move dir",
                "fullTitle": "Feature - directories:  Modifiy directories Move dir",
                "timedOut": false,
                "duration": 204,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c7b20305-1324-4c88-8265-5234ae6eea86",
                "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
                "skipped": false
              },
              {
                "title": "Delete dir",
                "fullTitle": "Feature - directories:  Modifiy directories Delete dir",
                "timedOut": false,
                "duration": 263,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "cb4d816d-a587-4531-9493-de13c2e066a7",
                "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 729
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/directories-spec.js",
        "uuid": "a59981b5-b0a5-4130-b46f-fe2314b8393b",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/directories-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - Experiments: ",
        "suites": [
          {
            "title": "Function level",
            "suites": [],
            "tests": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Experiments:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "7f0df35b-7803-422d-b78a-5307faed3d2e",
                "parentUUID": "6fa7c108-3871-4189-9b9b-ec9726f13a8d",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Experiments:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "7f0df35b-7803-422d-b78a-5307faed3d2e",
                "parentUUID": "6fa7c108-3871-4189-9b9b-ec9726f13a8d",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/experiments-spec.js",
            "uuid": "6fa7c108-3871-4189-9b9b-ec9726f13a8d",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/experiments-spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/experiments-spec.js",
        "uuid": "edc0fb22-a021-4deb-b785-0a5aaace51fb",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/experiments-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - Files: ",
        "suites": [
          {
            "title": "Function level",
            "suites": [],
            "tests": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Files:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "39e015c3-d678-4eae-b39b-1b0f436d98f4",
                "parentUUID": "e182dcf1-540a-4070-a5e7-88e01342abd6",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Files:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "39e015c3-d678-4eae-b39b-1b0f436d98f4",
                "parentUUID": "e182dcf1-540a-4070-a5e7-88e01342abd6",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/files-spec.js",
            "uuid": "e182dcf1-540a-4070-a5e7-88e01342abd6",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/files-spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/files-spec.js",
        "uuid": "1c209a25-ae80-409e-8f76-16c82176219e",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/files-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - Measurments: ",
        "suites": [
          {
            "title": "Function level",
            "suites": [],
            "tests": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Measurments:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "3e3e574c-04d9-491b-a952-2d7cebb112ef",
                "parentUUID": "db0bfe7b-c44f-45a0-b4ed-d24ca423b6aa",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Measurments:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "3e3e574c-04d9-491b-a952-2d7cebb112ef",
                "parentUUID": "db0bfe7b-c44f-45a0-b4ed-d24ca423b6aa",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/measurements-spec.js",
            "uuid": "db0bfe7b-c44f-45a0-b4ed-d24ca423b6aa",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/measurements-spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/measurements-spec.js",
        "uuid": "9024822d-5a09-4e23-ae36-6ebefa4fe78b",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/measurements-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - Processes: ",
        "suites": [
          {
            "title": "Function level",
            "suites": [],
            "tests": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Processes:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "1dbe61ca-f366-4483-a1c1-11591bfe080e",
                "parentUUID": "49c7556a-a5ba-48af-bef4-74bb0db05558",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Processes:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "1dbe61ca-f366-4483-a1c1-11591bfe080e",
                "parentUUID": "49c7556a-a5ba-48af-bef4-74bb0db05558",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/processes-spec.js",
            "uuid": "49c7556a-a5ba-48af-bef4-74bb0db05558",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/processes-spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/processes-spec.js",
        "uuid": "2fc15eee-dcff-47ba-bcc7-e7e2aa70d5a7",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/processes-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - projects: ",
        "suites": [
          {
            "title": "Create project",
            "suites": [],
            "tests": [
              {
                "title": "create project and get project back",
                "fullTitle": "Feature - projects:  Create project create project and get project back",
                "timedOut": false,
                "duration": 80,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "78497e05-d242-431c-9ac6-bfe7f871b129",
                "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
                "skipped": false
              },
              {
                "title": "create project and find project in all projects",
                "fullTitle": "Feature - projects:  Create project create project and find project in all projects",
                "timedOut": false,
                "duration": 104,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "a5baf0f7-7fe4-498a-be87-6bb8860323bf",
                "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
                "skipped": false
              },
              {
                "title": "create project and find project by user",
                "fullTitle": "Feature - projects:  Create project create project and find project by user",
                "timedOut": false,
                "duration": 83,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "5c395976-43b5-470b-9e76-847daa2a4416",
                "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
                "skipped": false
              },
              {
                "title": "create project, find by user, has full set of properties",
                "fullTitle": "Feature - projects:  Create project create project, find by user, has full set of properties",
                "timedOut": false,
                "duration": 86,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "f24db5df-a7c0-47b3-9487-77410c68197b",
                "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/projects-spec.js",
            "uuid": "31af38df-3b4f-479f-8cc5-b76112417106",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/projects-spec.js",
            "passes": [
              {
                "title": "create project and get project back",
                "fullTitle": "Feature - projects:  Create project create project and get project back",
                "timedOut": false,
                "duration": 80,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "78497e05-d242-431c-9ac6-bfe7f871b129",
                "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
                "skipped": false
              },
              {
                "title": "create project and find project in all projects",
                "fullTitle": "Feature - projects:  Create project create project and find project in all projects",
                "timedOut": false,
                "duration": 104,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "a5baf0f7-7fe4-498a-be87-6bb8860323bf",
                "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
                "skipped": false
              },
              {
                "title": "create project and find project by user",
                "fullTitle": "Feature - projects:  Create project create project and find project by user",
                "timedOut": false,
                "duration": 83,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "5c395976-43b5-470b-9e76-847daa2a4416",
                "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
                "skipped": false
              },
              {
                "title": "create project, find by user, has full set of properties",
                "fullTitle": "Feature - projects:  Create project create project, find by user, has full set of properties",
                "timedOut": false,
                "duration": 86,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "f24db5df-a7c0-47b3-9487-77410c68197b",
                "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 353
          },
          {
            "title": "Update project",
            "suites": [],
            "tests": [
              {
                "title": "create project, update name and description",
                "fullTitle": "Feature - projects:  Update project create project, update name and description",
                "timedOut": false,
                "duration": 87,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "8a078908-b5d3-4120-97ab-f87ed26ba66b",
                "parentUUID": "d4da96f0-7df1-4e35-a10f-6e6d33240cf0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/projects-spec.js",
            "uuid": "d4da96f0-7df1-4e35-a10f-6e6d33240cf0",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/projects-spec.js",
            "passes": [
              {
                "title": "create project, update name and description",
                "fullTitle": "Feature - projects:  Update project create project, update name and description",
                "timedOut": false,
                "duration": 87,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "8a078908-b5d3-4120-97ab-f87ed26ba66b",
                "parentUUID": "d4da96f0-7df1-4e35-a10f-6e6d33240cf0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 87
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/projects-spec.js",
        "uuid": "4575b1bd-d64c-44f6-9ca7-8b71adcd4031",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/projects-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - Properties: ",
        "suites": [
          {
            "title": "Function level",
            "suites": [],
            "tests": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Properties:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "3850159f-d5f2-48d3-b276-2c577b47b040",
                "parentUUID": "1d0f1471-1c95-4153-8eeb-c4ba0f27e627",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Properties:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "3850159f-d5f2-48d3-b276-2c577b47b040",
                "parentUUID": "1d0f1471-1c95-4153-8eeb-c4ba0f27e627",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/properties-spec.js",
            "uuid": "1d0f1471-1c95-4153-8eeb-c4ba0f27e627",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/properties-spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/properties-spec.js",
        "uuid": "14334d6e-f264-4994-9230-18824b9d0da2",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/properties-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - reset lost password: ",
        "suites": [
          {
            "title": "User with reset_password flag",
            "suites": [],
            "tests": [
              {
                "title": "there is a user for testing",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag there is a user for testing",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "1308df47-6130-4e11-ab5a-96ba4327caa5",
                "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
                "skipped": false
              },
              {
                "title": "User with the reset password flag set",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User with the reset password flag set",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "75856650-204a-4f21-b42e-549deeee5d05",
                "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
                "skipped": false
              },
              {
                "title": "User reset password flag is cleared",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User reset password flag is cleared",
                "timedOut": false,
                "duration": 71,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "6aa19132-14b1-4c21-a375-000106f40896",
                "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/reset-lost-password-spec.js",
            "uuid": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/reset-lost-password-spec.js",
            "passes": [
              {
                "title": "there is a user for testing",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag there is a user for testing",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "1308df47-6130-4e11-ab5a-96ba4327caa5",
                "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
                "skipped": false
              },
              {
                "title": "User with the reset password flag set",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User with the reset password flag set",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "75856650-204a-4f21-b42e-549deeee5d05",
                "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
                "skipped": false
              },
              {
                "title": "User reset password flag is cleared",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User reset password flag is cleared",
                "timedOut": false,
                "duration": 71,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "6aa19132-14b1-4c21-a375-000106f40896",
                "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 91
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/reset-lost-password-spec.js",
        "uuid": "2a1d1f7f-7799-4b65-a7ee-3eafd2f0ac74",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/reset-lost-password-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - Samples: ",
        "suites": [
          {
            "title": "Function level",
            "suites": [],
            "tests": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Samples:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "fc2c5f3f-7a8b-452c-94c8-8eab7e57f532",
                "parentUUID": "2489f0a4-e086-43aa-8f8d-2724f794ea7e",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Samples:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "fc2c5f3f-7a8b-452c-94c8-8eab7e57f532",
                "parentUUID": "2489f0a4-e086-43aa-8f8d-2724f794ea7e",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/samples-spec.js",
            "uuid": "2489f0a4-e086-43aa-8f8d-2724f794ea7e",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/samples-spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/samples-spec.js",
        "uuid": "ae1ffaca-3d6b-40b9-b1fc-595c05c8b782",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/samples-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - Templates: ",
        "suites": [
          {
            "title": "Function level",
            "suites": [],
            "tests": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Templates:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "abd45432-b7dd-4b2c-a0cc-fb303c4a6d36",
                "parentUUID": "3e546da9-9a24-457c-89c8-85349d77cebc",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Templates:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "abd45432-b7dd-4b2c-a0cc-fb303c4a6d36",
                "parentUUID": "3e546da9-9a24-457c-89c8-85349d77cebc",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/templates-spec.js",
            "uuid": "3e546da9-9a24-457c-89c8-85349d77cebc",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/templates-spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/templates-spec.js",
        "uuid": "58ed9646-4fca-434d-bbd3-8f6a278b469b",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/templates-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - Users: ",
        "suites": [
          {
            "title": "Function level",
            "suites": [],
            "tests": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Users:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "2ae39e14-654c-49b9-80db-3a53ac8c7f9c",
                "parentUUID": "36734e5d-e463-4044-a6a9-8d34aa1d3b1c",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "individual test level",
                "fullTitle": "Feature - Users:  Function level individual test level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "2ae39e14-654c-49b9-80db-3a53ac8c7f9c",
                "parentUUID": "36734e5d-e463-4044-a6a9-8d34aa1d3b1c",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/Database-Level/specs/users-spec.js",
            "uuid": "36734e5d-e463-4044-a6a9-8d34aa1d3b1c",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/users-spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/Database-Level/specs/users-spec.js",
        "uuid": "c65e0354-d828-4d54-be1f-5a3bd0803dfa",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/Database-Level/specs/users-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "32f1442d-6b28-4e72-b081-8dc1181019a1",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "d9a92fd4-28a6-4cb8-861a-8aa19065be2e",
      "parentUUID": "6f1df67f-7438-4bdc-8d11-372378e6f2ff",
      "skipped": false
    },
    {
      "title": "fetch top level directory from project",
      "fullTitle": "Top level directory fetch top level directory from project",
      "timedOut": false,
      "duration": 94,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "2989a122-1dd6-495c-8ec6-43b7cdb0714c",
      "parentUUID": "9581f349-e1d0-4fef-bdd2-b24ebaf19731",
      "skipped": false
    },
    {
      "title": "fetch top level directory by id",
      "fullTitle": "Top level directory fetch top level directory by id",
      "timedOut": false,
      "duration": 92,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "c39c1214-1271-4b4a-b22a-a746fc63c048",
      "parentUUID": "9581f349-e1d0-4fef-bdd2-b24ebaf19731",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as /",
      "fullTitle": "Create directory create directory path from top directory as /",
      "timedOut": false,
      "duration": 263,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "de5d70b6-be51-43d6-889f-49075fe52d84",
      "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as id",
      "fullTitle": "Create directory create directory path from top directory as id",
      "timedOut": false,
      "duration": 181,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "3d4ed024-9111-46b1-93b1-8dead69b10fd",
      "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
      "skipped": false
    },
    {
      "title": "create directory path from directory as path",
      "fullTitle": "Create directory create directory path from directory as path",
      "timedOut": false,
      "duration": 253,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "06de2589-76b0-40b9-9734-80107bb4a590",
      "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
      "skipped": false
    },
    {
      "title": "Get all dirs in project and test for empty",
      "fullTitle": "Get directories Get all dirs in project and test for empty",
      "timedOut": false,
      "duration": 182,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "713bf37a-55fb-41f1-a925-6cfb09d312ec",
      "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
      "skipped": false
    },
    {
      "title": "Subdir exists and test for empty",
      "fullTitle": "Get directories Subdir exists and test for empty",
      "timedOut": false,
      "duration": 149,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "d2163c35-f2e4-4f2a-ae29-e40a6fb37dc1",
      "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
      "skipped": false
    },
    {
      "title": "Get sub-directories as peer_directories",
      "fullTitle": "Get directories Get sub-directories as peer_directories",
      "timedOut": false,
      "duration": 218,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "b6ec67e0-77c7-4217-ba6f-33529530af79",
      "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
      "skipped": false
    },
    {
      "title": "Find in project",
      "fullTitle": "Get directories Find in project",
      "timedOut": false,
      "duration": 293,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "abd909d1-9a98-4fb8-a301-26cda38c2bb9",
      "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
      "skipped": false
    },
    {
      "title": "Rename dir",
      "fullTitle": "Modifiy directories Rename dir",
      "timedOut": false,
      "duration": 262,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "9011c09c-529b-41a5-acea-319c1625dc26",
      "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
      "skipped": false
    },
    {
      "title": "Move dir",
      "fullTitle": "Modifiy directories Move dir",
      "timedOut": false,
      "duration": 204,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "a97cbef3-c77f-42d6-b43b-afb55ec1187d",
      "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
      "skipped": false
    },
    {
      "title": "Delete dir",
      "fullTitle": "Modifiy directories Delete dir",
      "timedOut": false,
      "duration": 263,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "5d03ba68-7b97-4ae0-842f-5b5ae5ecdf74",
      "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "ed7ac384-9672-40d4-9ff0-81f1843d12c3",
      "parentUUID": "6fa7c108-3871-4189-9b9b-ec9726f13a8d",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "916405c9-4699-4e76-982b-108de1709cfe",
      "parentUUID": "e182dcf1-540a-4070-a5e7-88e01342abd6",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "e53ff151-9de7-4e15-8f0f-0c44d6bebc62",
      "parentUUID": "db0bfe7b-c44f-45a0-b4ed-d24ca423b6aa",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "e739d6df-3c6e-4302-9e02-af568b89e95d",
      "parentUUID": "49c7556a-a5ba-48af-bef4-74bb0db05558",
      "skipped": false
    },
    {
      "title": "create project and get project back",
      "fullTitle": "Create project create project and get project back",
      "timedOut": false,
      "duration": 80,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "9d42cc12-cc38-48be-a28d-f259c0810866",
      "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
      "skipped": false
    },
    {
      "title": "create project and find project in all projects",
      "fullTitle": "Create project create project and find project in all projects",
      "timedOut": false,
      "duration": 104,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "a8010813-f76d-47f6-a3da-25ca42de9473",
      "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
      "skipped": false
    },
    {
      "title": "create project and find project by user",
      "fullTitle": "Create project create project and find project by user",
      "timedOut": false,
      "duration": 83,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "6023aaee-7868-442b-a3bb-1126b9fcdb03",
      "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
      "skipped": false
    },
    {
      "title": "create project, find by user, has full set of properties",
      "fullTitle": "Create project create project, find by user, has full set of properties",
      "timedOut": false,
      "duration": 86,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "51025333-acfa-4776-a558-a1f90447fb4a",
      "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
      "skipped": false
    },
    {
      "title": "create project, update name and description",
      "fullTitle": "Update project create project, update name and description",
      "timedOut": false,
      "duration": 87,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "aeb01c3f-1ba3-488f-b92c-a787e5b8304c",
      "parentUUID": "d4da96f0-7df1-4e35-a10f-6e6d33240cf0",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "98060c25-2acc-4b43-b7f5-8b3881419289",
      "parentUUID": "1d0f1471-1c95-4153-8eeb-c4ba0f27e627",
      "skipped": false
    },
    {
      "title": "there is a user for testing",
      "fullTitle": "User with reset_password flag there is a user for testing",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "1f964531-f29d-4e3e-a598-5c7e7444f2c3",
      "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
      "skipped": false
    },
    {
      "title": "User with the reset password flag set",
      "fullTitle": "User with reset_password flag User with the reset password flag set",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "24ec1329-63fd-4743-9cc2-c05ff0664697",
      "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
      "skipped": false
    },
    {
      "title": "User reset password flag is cleared",
      "fullTitle": "User with reset_password flag User reset password flag is cleared",
      "timedOut": false,
      "duration": 71,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "cd1b43e2-db9d-4133-8faa-14e48579af19",
      "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "31aa8c96-2dba-416e-8449-386cedf455ae",
      "parentUUID": "2489f0a4-e086-43aa-8f8d-2724f794ea7e",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "452b826d-92b5-4c89-b7da-af4040f3f88e",
      "parentUUID": "3e546da9-9a24-457c-89c8-85349d77cebc",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "34b36860-298b-4a1e-95a2-73a9de8939e4",
      "parentUUID": "36734e5d-e463-4044-a6a9-8d34aa1d3b1c",
      "skipped": false
    }
  ],
  "allPending": [
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "e021177d-0d57-4292-9f88-3712b7683a54",
      "parentUUID": "6f1df67f-7438-4bdc-8d11-372378e6f2ff",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "75325923-1497-4d96-aa6a-033b3d49e7a1",
      "parentUUID": "6fa7c108-3871-4189-9b9b-ec9726f13a8d",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "a8d3639b-f2ae-4052-9124-50013aad7ad0",
      "parentUUID": "e182dcf1-540a-4070-a5e7-88e01342abd6",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "c4eaff19-6598-471c-a6c7-3e7c5e908fef",
      "parentUUID": "db0bfe7b-c44f-45a0-b4ed-d24ca423b6aa",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "6c23fa28-c313-4e65-9956-0f5667231679",
      "parentUUID": "49c7556a-a5ba-48af-bef4-74bb0db05558",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "95b7ff50-c1a0-4f8e-9c1a-e3137c7fdd02",
      "parentUUID": "1d0f1471-1c95-4153-8eeb-c4ba0f27e627",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "7d44fda7-4e5a-4a8f-9523-3091d788e0a9",
      "parentUUID": "2489f0a4-e086-43aa-8f8d-2724f794ea7e",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "6968b2a6-4afe-484b-a369-b71952adecd2",
      "parentUUID": "3e546da9-9a24-457c-89c8-85349d77cebc",
      "skipped": false
    },
    {
      "title": "individual test level",
      "fullTitle": "Function level individual test level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "b4a77045-1121-4aa3-ab82-9efe58d1114f",
      "parentUUID": "36734e5d-e463-4044-a6a9-8d34aa1d3b1c",
      "skipped": false
    }
  ],
  "allPasses": [
    {
      "title": "fetch top level directory from project",
      "fullTitle": "Top level directory fetch top level directory from project",
      "timedOut": false,
      "duration": 94,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "093359b5-29fd-47dd-a432-77046db8f6de",
      "parentUUID": "9581f349-e1d0-4fef-bdd2-b24ebaf19731",
      "skipped": false
    },
    {
      "title": "fetch top level directory by id",
      "fullTitle": "Top level directory fetch top level directory by id",
      "timedOut": false,
      "duration": 92,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "d2c46ca5-ac77-4b3b-8a4d-a8a88578a04f",
      "parentUUID": "9581f349-e1d0-4fef-bdd2-b24ebaf19731",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as /",
      "fullTitle": "Create directory create directory path from top directory as /",
      "timedOut": false,
      "duration": 263,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "05462871-1abe-4123-a3f3-f13ac860c320",
      "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as id",
      "fullTitle": "Create directory create directory path from top directory as id",
      "timedOut": false,
      "duration": 181,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "ac19458a-7638-47b9-90e1-1b4c46b7e836",
      "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
      "skipped": false
    },
    {
      "title": "create directory path from directory as path",
      "fullTitle": "Create directory create directory path from directory as path",
      "timedOut": false,
      "duration": 253,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "f34d3bc7-902d-495a-8be2-a6c321bf0966",
      "parentUUID": "624d680f-ee9e-4748-8763-4bc19df9807d",
      "skipped": false
    },
    {
      "title": "Get all dirs in project and test for empty",
      "fullTitle": "Get directories Get all dirs in project and test for empty",
      "timedOut": false,
      "duration": 182,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "093e520c-6b70-4370-b38f-51742c4917e4",
      "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
      "skipped": false
    },
    {
      "title": "Subdir exists and test for empty",
      "fullTitle": "Get directories Subdir exists and test for empty",
      "timedOut": false,
      "duration": 149,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "a8c37788-60ed-4c8a-a82f-8768d46ba4af",
      "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
      "skipped": false
    },
    {
      "title": "Get sub-directories as peer_directories",
      "fullTitle": "Get directories Get sub-directories as peer_directories",
      "timedOut": false,
      "duration": 218,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "60fa395e-a88c-475a-b9b4-159cdd116c31",
      "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
      "skipped": false
    },
    {
      "title": "Find in project",
      "fullTitle": "Get directories Find in project",
      "timedOut": false,
      "duration": 293,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "d4f918db-4179-4005-ab49-03b1fb955197",
      "parentUUID": "1859a013-e8ee-4907-9f4a-0ea622d0cee9",
      "skipped": false
    },
    {
      "title": "Rename dir",
      "fullTitle": "Modifiy directories Rename dir",
      "timedOut": false,
      "duration": 262,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "b14acbca-1120-4c84-990a-93c64c9227b7",
      "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
      "skipped": false
    },
    {
      "title": "Move dir",
      "fullTitle": "Modifiy directories Move dir",
      "timedOut": false,
      "duration": 204,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "0f2fafce-63ea-45e3-a7e5-caef9f45fc61",
      "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
      "skipped": false
    },
    {
      "title": "Delete dir",
      "fullTitle": "Modifiy directories Delete dir",
      "timedOut": false,
      "duration": 263,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "14548de2-bb93-4dc3-9729-107c62e72f47",
      "parentUUID": "4eb5e8b1-b7da-4a00-ac32-06348b62ca16",
      "skipped": false
    },
    {
      "title": "create project and get project back",
      "fullTitle": "Create project create project and get project back",
      "timedOut": false,
      "duration": 80,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "c357ba38-c81c-4686-bff8-1313536a8f98",
      "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
      "skipped": false
    },
    {
      "title": "create project and find project in all projects",
      "fullTitle": "Create project create project and find project in all projects",
      "timedOut": false,
      "duration": 104,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "bb4087bf-a4ea-48c4-9cef-22dbe83ad86a",
      "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
      "skipped": false
    },
    {
      "title": "create project and find project by user",
      "fullTitle": "Create project create project and find project by user",
      "timedOut": false,
      "duration": 83,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "7ed54764-6722-4955-bc3b-34884829cf14",
      "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
      "skipped": false
    },
    {
      "title": "create project, find by user, has full set of properties",
      "fullTitle": "Create project create project, find by user, has full set of properties",
      "timedOut": false,
      "duration": 86,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "11e836a1-9ce6-4db7-ac55-12c78e8d7ffe",
      "parentUUID": "31af38df-3b4f-479f-8cc5-b76112417106",
      "skipped": false
    },
    {
      "title": "create project, update name and description",
      "fullTitle": "Update project create project, update name and description",
      "timedOut": false,
      "duration": 87,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "921324b1-3e96-47f2-8652-e542a593a194",
      "parentUUID": "d4da96f0-7df1-4e35-a10f-6e6d33240cf0",
      "skipped": false
    },
    {
      "title": "there is a user for testing",
      "fullTitle": "User with reset_password flag there is a user for testing",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "2dc602d0-2e59-4bf5-b43f-f9c0e3a1d3ca",
      "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
      "skipped": false
    },
    {
      "title": "User with the reset password flag set",
      "fullTitle": "User with reset_password flag User with the reset password flag set",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "95150543-52e0-4075-88a0-9f89669382a0",
      "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
      "skipped": false
    },
    {
      "title": "User reset password flag is cleared",
      "fullTitle": "User with reset_password flag User reset password flag is cleared",
      "timedOut": false,
      "duration": 71,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "e2459e8e-eddd-4acd-8210-97d7385f7e17",
      "parentUUID": "8c642f91-32fd-4cfb-b7e0-32f98681dcc3",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}
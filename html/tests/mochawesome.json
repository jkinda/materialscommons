{
  "reportTitle": "materialscommons.org",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 9,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2017-02-03T17:35:36.257Z",
    "end": "2017-02-03T17:35:38.587Z",
    "duration": 2330,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Feature - directories: ",
        "suites": [
          {
            "title": "Top level directory",
            "suites": [],
            "tests": [
              {
                "title": "fetch top level directory from project",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory from project",
                "timedOut": false,
                "duration": 101,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "b6e10728-e9d6-4d2e-920f-3c2c3085189f",
                "parentUUID": "9f115de6-1d08-412a-9f7e-514090967328",
                "skipped": false
              },
              {
                "title": "fetch top level directory by id",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory by id",
                "timedOut": false,
                "duration": 122,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "abc93161-0adc-48ea-8a69-ad528661dd50",
                "parentUUID": "9f115de6-1d08-412a-9f7e-514090967328",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "9f115de6-1d08-412a-9f7e-514090967328",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "fetch top level directory from project",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory from project",
                "timedOut": false,
                "duration": 101,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "b6e10728-e9d6-4d2e-920f-3c2c3085189f",
                "parentUUID": "9f115de6-1d08-412a-9f7e-514090967328",
                "skipped": false
              },
              {
                "title": "fetch top level directory by id",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory by id",
                "timedOut": false,
                "duration": 122,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "abc93161-0adc-48ea-8a69-ad528661dd50",
                "parentUUID": "9f115de6-1d08-412a-9f7e-514090967328",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 223
          },
          {
            "title": "Create directory",
            "suites": [],
            "tests": [
              {
                "title": "create directory path from top directory as /",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as /",
                "timedOut": false,
                "duration": 178,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "ebb89c4a-eca6-4dc8-b8a4-b2de091a5364",
                "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
                "skipped": false
              },
              {
                "title": "create directory path from top directory as id",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as id",
                "timedOut": false,
                "duration": 169,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c85834f0-b915-453f-990b-7d8185452bfd",
                "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
                "skipped": false
              },
              {
                "title": "create directory path from directory as path",
                "fullTitle": "Feature - directories:  Create directory create directory path from directory as path",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "868e6c87-e289-4bd5-a033-9a430ef0f63a",
                "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "create directory path from top directory as /",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as /",
                "timedOut": false,
                "duration": 178,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "ebb89c4a-eca6-4dc8-b8a4-b2de091a5364",
                "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
                "skipped": false
              },
              {
                "title": "create directory path from top directory as id",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as id",
                "timedOut": false,
                "duration": 169,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c85834f0-b915-453f-990b-7d8185452bfd",
                "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
                "skipped": false
              },
              {
                "title": "create directory path from directory as path",
                "fullTitle": "Feature - directories:  Create directory create directory path from directory as path",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "868e6c87-e289-4bd5-a033-9a430ef0f63a",
                "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 616
          },
          {
            "title": "Get directories",
            "suites": [],
            "tests": [
              {
                "title": "Get all in project and test for empty",
                "fullTitle": "Feature - directories:  Get directories Get all in project and test for empty",
                "timedOut": false,
                "duration": 186,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "8e5614d0-18b8-48cc-afcc-52dbc54ec8a9",
                "parentUUID": "1a387738-a2b5-47a7-be19-bd99b148fcfb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "1a387738-a2b5-47a7-be19-bd99b148fcfb",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "Get all in project and test for empty",
                "fullTitle": "Feature - directories:  Get directories Get all in project and test for empty",
                "timedOut": false,
                "duration": 186,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "8e5614d0-18b8-48cc-afcc-52dbc54ec8a9",
                "parentUUID": "1a387738-a2b5-47a7-be19-bd99b148fcfb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 186
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/specs/directories-spec.js",
        "uuid": "82fe0991-b4e1-4e34-a67b-3663e3a3bff8",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - projects: ",
        "suites": [
          {
            "title": "Create project",
            "suites": [],
            "tests": [
              {
                "title": "create project and get project back",
                "fullTitle": "Feature - projects:  Create project create project and get project back",
                "timedOut": false,
                "duration": 69,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "23943ac0-2601-4389-8bbc-2c825121d3fc",
                "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
                "skipped": false
              },
              {
                "title": "create project and find project in all projects",
                "fullTitle": "Feature - projects:  Create project create project and find project in all projects",
                "timedOut": false,
                "duration": 85,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "9b05b589-a7ca-441a-9902-f0c3d95f54a9",
                "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
                "skipped": false
              },
              {
                "title": "create project and find project by user",
                "fullTitle": "Feature - projects:  Create project create project and find project by user",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "b5a107e3-0d34-4129-9e49-d4a1cf19c724",
                "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
                "skipped": false
              },
              {
                "title": "create project, find by user, has full set of properties",
                "fullTitle": "Feature - projects:  Create project create project, find by user, has full set of properties",
                "timedOut": false,
                "duration": 81,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "23b85796-ae8d-4d84-afa4-e0ba38d5a14f",
                "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/projects-spec.js",
            "uuid": "7484146a-3480-4b67-b811-86b93a5f824f",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/projects-spec.js",
            "passes": [
              {
                "title": "create project and get project back",
                "fullTitle": "Feature - projects:  Create project create project and get project back",
                "timedOut": false,
                "duration": 69,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "23943ac0-2601-4389-8bbc-2c825121d3fc",
                "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
                "skipped": false
              },
              {
                "title": "create project and find project in all projects",
                "fullTitle": "Feature - projects:  Create project create project and find project in all projects",
                "timedOut": false,
                "duration": 85,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "9b05b589-a7ca-441a-9902-f0c3d95f54a9",
                "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
                "skipped": false
              },
              {
                "title": "create project and find project by user",
                "fullTitle": "Feature - projects:  Create project create project and find project by user",
                "timedOut": false,
                "duration": 76,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "b5a107e3-0d34-4129-9e49-d4a1cf19c724",
                "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
                "skipped": false
              },
              {
                "title": "create project, find by user, has full set of properties",
                "fullTitle": "Feature - projects:  Create project create project, find by user, has full set of properties",
                "timedOut": false,
                "duration": 81,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "23b85796-ae8d-4d84-afa4-e0ba38d5a14f",
                "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 311
          },
          {
            "title": "Update project",
            "suites": [],
            "tests": [
              {
                "title": "create project, update name and description",
                "fullTitle": "Feature - projects:  Update project create project, update name and description",
                "timedOut": false,
                "duration": 94,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "70c8c70b-9b39-40ee-b928-7a61f964c453",
                "parentUUID": "9703228a-8f25-4b57-b070-13430751919e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/projects-spec.js",
            "uuid": "9703228a-8f25-4b57-b070-13430751919e",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/projects-spec.js",
            "passes": [
              {
                "title": "create project, update name and description",
                "fullTitle": "Feature - projects:  Update project create project, update name and description",
                "timedOut": false,
                "duration": 94,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "70c8c70b-9b39-40ee-b928-7a61f964c453",
                "parentUUID": "9703228a-8f25-4b57-b070-13430751919e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 94
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/specs/projects-spec.js",
        "uuid": "f5bd471e-cd99-416b-b459-000a23dc0ffb",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/projects-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - reset lost password: ",
        "suites": [
          {
            "title": "User with reset_password flag",
            "suites": [],
            "tests": [
              {
                "title": "there is a user for testing",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag there is a user for testing",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "a51908aa-d826-4aea-8508-8d51f08215ac",
                "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
                "skipped": false
              },
              {
                "title": "User with the reset password flag set",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User with the reset password flag set",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "572513d1-1a93-4475-b7e8-b5d3961d914f",
                "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
                "skipped": false
              },
              {
                "title": "User reset password flag is cleared",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User reset password flag is cleared",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "66e2bbfa-a1d8-4395-9ff4-e4c6a5abf1ec",
                "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/reset-lost-password-spec.js",
            "uuid": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/reset-lost-password-spec.js",
            "passes": [
              {
                "title": "there is a user for testing",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag there is a user for testing",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "a51908aa-d826-4aea-8508-8d51f08215ac",
                "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
                "skipped": false
              },
              {
                "title": "User with the reset password flag set",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User with the reset password flag set",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "572513d1-1a93-4475-b7e8-b5d3961d914f",
                "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
                "skipped": false
              },
              {
                "title": "User reset password flag is cleared",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User reset password flag is cleared",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "66e2bbfa-a1d8-4395-9ff4-e4c6a5abf1ec",
                "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 54
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/specs/reset-lost-password-spec.js",
        "uuid": "83fb4460-66bb-4877-8789-2075365f50c0",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/reset-lost-password-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "d6b9819c-482a-4c3d-b36c-3f252bbb4bc6",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "fetch top level directory from project",
      "fullTitle": "Top level directory fetch top level directory from project",
      "timedOut": false,
      "duration": 101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "7e9d56f0-80be-46d2-9d19-4b0825d3d1d8",
      "parentUUID": "9f115de6-1d08-412a-9f7e-514090967328",
      "skipped": false
    },
    {
      "title": "fetch top level directory by id",
      "fullTitle": "Top level directory fetch top level directory by id",
      "timedOut": false,
      "duration": 122,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "0a19edfe-582f-43a2-b383-2e87a0a2c4f4",
      "parentUUID": "9f115de6-1d08-412a-9f7e-514090967328",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as /",
      "fullTitle": "Create directory create directory path from top directory as /",
      "timedOut": false,
      "duration": 178,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "871ddcff-6810-4509-a76c-d77fdf77d1bf",
      "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as id",
      "fullTitle": "Create directory create directory path from top directory as id",
      "timedOut": false,
      "duration": 169,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "4eba47da-1be5-47a6-b894-1073a73645a1",
      "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
      "skipped": false
    },
    {
      "title": "create directory path from directory as path",
      "fullTitle": "Create directory create directory path from directory as path",
      "timedOut": false,
      "duration": 269,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "2f2a55f2-c74b-402b-a8df-fc3e81ee23a5",
      "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
      "skipped": false
    },
    {
      "title": "Get all in project and test for empty",
      "fullTitle": "Get directories Get all in project and test for empty",
      "timedOut": false,
      "duration": 186,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "645d6e0e-ea4a-49e5-b00e-38dcca42133a",
      "parentUUID": "1a387738-a2b5-47a7-be19-bd99b148fcfb",
      "skipped": false
    },
    {
      "title": "create project and get project back",
      "fullTitle": "Create project create project and get project back",
      "timedOut": false,
      "duration": 69,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "15bbf264-1d73-44ae-be22-17823122f18a",
      "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
      "skipped": false
    },
    {
      "title": "create project and find project in all projects",
      "fullTitle": "Create project create project and find project in all projects",
      "timedOut": false,
      "duration": 85,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "61c284cc-1305-4c91-95fb-07870311590d",
      "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
      "skipped": false
    },
    {
      "title": "create project and find project by user",
      "fullTitle": "Create project create project and find project by user",
      "timedOut": false,
      "duration": 76,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "7263df65-b781-4357-87da-b59283110a1d",
      "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
      "skipped": false
    },
    {
      "title": "create project, find by user, has full set of properties",
      "fullTitle": "Create project create project, find by user, has full set of properties",
      "timedOut": false,
      "duration": 81,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "44ba8ead-68f1-4081-b192-43f025e9bfbb",
      "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
      "skipped": false
    },
    {
      "title": "create project, update name and description",
      "fullTitle": "Update project create project, update name and description",
      "timedOut": false,
      "duration": 94,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "9910a92c-a7fc-41f1-8cac-00fa20b02cd7",
      "parentUUID": "9703228a-8f25-4b57-b070-13430751919e",
      "skipped": false
    },
    {
      "title": "there is a user for testing",
      "fullTitle": "User with reset_password flag there is a user for testing",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "f94bd57d-5e70-4ed8-9027-c23687dfb75e",
      "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
      "skipped": false
    },
    {
      "title": "User with the reset password flag set",
      "fullTitle": "User with reset_password flag User with the reset password flag set",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "6535e76d-5488-4ffa-a412-280a75bb2916",
      "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
      "skipped": false
    },
    {
      "title": "User reset password flag is cleared",
      "fullTitle": "User with reset_password flag User reset password flag is cleared",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "090e25e4-e003-4457-b7c6-8d0a3e10c3de",
      "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "fetch top level directory from project",
      "fullTitle": "Top level directory fetch top level directory from project",
      "timedOut": false,
      "duration": 101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "246dbde4-ff85-4066-a8ad-36db42e6c000",
      "parentUUID": "9f115de6-1d08-412a-9f7e-514090967328",
      "skipped": false
    },
    {
      "title": "fetch top level directory by id",
      "fullTitle": "Top level directory fetch top level directory by id",
      "timedOut": false,
      "duration": 122,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "5e7fd2ea-8fbb-4746-b9ac-c3beb4d5b22e",
      "parentUUID": "9f115de6-1d08-412a-9f7e-514090967328",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as /",
      "fullTitle": "Create directory create directory path from top directory as /",
      "timedOut": false,
      "duration": 178,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "e26c26a8-4608-4796-bcc9-a7b354b74651",
      "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as id",
      "fullTitle": "Create directory create directory path from top directory as id",
      "timedOut": false,
      "duration": 169,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "02bc141a-6a65-4bc3-877d-c34d8de7f621",
      "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
      "skipped": false
    },
    {
      "title": "create directory path from directory as path",
      "fullTitle": "Create directory create directory path from directory as path",
      "timedOut": false,
      "duration": 269,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "2d851977-529c-43bb-b457-7fbaf2987401",
      "parentUUID": "707e81b3-8e90-4af0-b59f-7bb731d1009b",
      "skipped": false
    },
    {
      "title": "Get all in project and test for empty",
      "fullTitle": "Get directories Get all in project and test for empty",
      "timedOut": false,
      "duration": 186,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "95f0ca71-bff4-426d-a1fb-582350584ab6",
      "parentUUID": "1a387738-a2b5-47a7-be19-bd99b148fcfb",
      "skipped": false
    },
    {
      "title": "create project and get project back",
      "fullTitle": "Create project create project and get project back",
      "timedOut": false,
      "duration": 69,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "2b43da72-a03d-4c96-b975-f8cb77d7a17b",
      "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
      "skipped": false
    },
    {
      "title": "create project and find project in all projects",
      "fullTitle": "Create project create project and find project in all projects",
      "timedOut": false,
      "duration": 85,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "2ac9fbf1-7658-47ac-b596-c674cc37e688",
      "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
      "skipped": false
    },
    {
      "title": "create project and find project by user",
      "fullTitle": "Create project create project and find project by user",
      "timedOut": false,
      "duration": 76,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "fbbbe833-ecfb-4e18-bc44-e3b6d471d247",
      "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
      "skipped": false
    },
    {
      "title": "create project, find by user, has full set of properties",
      "fullTitle": "Create project create project, find by user, has full set of properties",
      "timedOut": false,
      "duration": 81,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "fedff472-7607-4eca-bb35-7481d703604d",
      "parentUUID": "7484146a-3480-4b67-b811-86b93a5f824f",
      "skipped": false
    },
    {
      "title": "create project, update name and description",
      "fullTitle": "Update project create project, update name and description",
      "timedOut": false,
      "duration": 94,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "aa88854c-dc14-490f-9bb7-14bf36075fa7",
      "parentUUID": "9703228a-8f25-4b57-b070-13430751919e",
      "skipped": false
    },
    {
      "title": "there is a user for testing",
      "fullTitle": "User with reset_password flag there is a user for testing",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "67d75184-74ef-488c-a40f-accf46458a3e",
      "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
      "skipped": false
    },
    {
      "title": "User with the reset password flag set",
      "fullTitle": "User with reset_password flag User with the reset password flag set",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "3d3ad5c9-1e98-45a7-a277-883e4d34d598",
      "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
      "skipped": false
    },
    {
      "title": "User reset password flag is cleared",
      "fullTitle": "User with reset_password flag User reset password flag is cleared",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "0b43b15b-a5c3-46b5-9046-8aac21b2e09c",
      "parentUUID": "52995f03-61d7-4e63-b8f5-abfb39fc6a03",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}
{
  "reportTitle": "materialscommons.org",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 12,
    "tests": 21,
    "passes": 20,
    "pending": 1,
    "failures": 0,
    "start": "2017-02-03T21:33:20.954Z",
    "end": "2017-02-03T21:33:24.858Z",
    "duration": 3904,
    "testsRegistered": 21,
    "passPercent": 100,
    "pendingPercent": 4.8,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Feature - directories: ",
        "suites": [
          {
            "title": "Top level directory",
            "suites": [],
            "tests": [
              {
                "title": "fetch top level directory from project",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory from project",
                "timedOut": false,
                "duration": 110,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c66c5ccd-09af-4bd5-a53f-e4f9895137b2",
                "parentUUID": "3106cc0f-484a-41bf-9e3a-dd7283d2d512",
                "skipped": false
              },
              {
                "title": "fetch top level directory by id",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory by id",
                "timedOut": false,
                "duration": 80,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "32bb5fc5-3448-42df-8635-d6bb6b30c4bf",
                "parentUUID": "3106cc0f-484a-41bf-9e3a-dd7283d2d512",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "3106cc0f-484a-41bf-9e3a-dd7283d2d512",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "fetch top level directory from project",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory from project",
                "timedOut": false,
                "duration": 110,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "c66c5ccd-09af-4bd5-a53f-e4f9895137b2",
                "parentUUID": "3106cc0f-484a-41bf-9e3a-dd7283d2d512",
                "skipped": false
              },
              {
                "title": "fetch top level directory by id",
                "fullTitle": "Feature - directories:  Top level directory fetch top level directory by id",
                "timedOut": false,
                "duration": 80,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "32bb5fc5-3448-42df-8635-d6bb6b30c4bf",
                "parentUUID": "3106cc0f-484a-41bf-9e3a-dd7283d2d512",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 190
          },
          {
            "title": "Create directory",
            "suites": [],
            "tests": [
              {
                "title": "create directory path from top directory as /",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as /",
                "timedOut": false,
                "duration": 258,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "4bbdad78-14bc-4369-8973-d4885e14206b",
                "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
                "skipped": false
              },
              {
                "title": "create directory path from top directory as id",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as id",
                "timedOut": false,
                "duration": 177,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "6cecf3b6-3231-45af-8b4c-1f18db0d6f3d",
                "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
                "skipped": false
              },
              {
                "title": "create directory path from directory as path",
                "fullTitle": "Feature - directories:  Create directory create directory path from directory as path",
                "timedOut": false,
                "duration": 242,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "2c108d16-6a39-4c1c-a557-99cc49902665",
                "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "create directory path from top directory as /",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as /",
                "timedOut": false,
                "duration": 258,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "4bbdad78-14bc-4369-8973-d4885e14206b",
                "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
                "skipped": false
              },
              {
                "title": "create directory path from top directory as id",
                "fullTitle": "Feature - directories:  Create directory create directory path from top directory as id",
                "timedOut": false,
                "duration": 177,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "6cecf3b6-3231-45af-8b4c-1f18db0d6f3d",
                "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
                "skipped": false
              },
              {
                "title": "create directory path from directory as path",
                "fullTitle": "Feature - directories:  Create directory create directory path from directory as path",
                "timedOut": false,
                "duration": 242,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "2c108d16-6a39-4c1c-a557-99cc49902665",
                "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 677
          },
          {
            "title": "Get directories",
            "suites": [],
            "tests": [
              {
                "title": "Get all dirs in project and test for empty",
                "fullTitle": "Feature - directories:  Get directories Get all dirs in project and test for empty",
                "timedOut": false,
                "duration": 188,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "1b09d378-c940-47c4-ab5e-01b8c316ccb1",
                "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
                "skipped": false
              },
              {
                "title": "Subdir exists and test for empty",
                "fullTitle": "Feature - directories:  Get directories Subdir exists and test for empty",
                "timedOut": false,
                "duration": 270,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "3d02bee2-49ee-45d4-85b0-eb3599941c07",
                "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
                "skipped": false
              },
              {
                "title": "Get sub-directories as peer_directories",
                "fullTitle": "Feature - directories:  Get directories Get sub-directories as peer_directories",
                "timedOut": false,
                "duration": 206,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "6318d1be-2635-4c28-99a1-38a03e948f33",
                "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
                "skipped": false
              },
              {
                "title": "Find in project",
                "fullTitle": "Feature - directories:  Get directories Find in project",
                "timedOut": false,
                "duration": 175,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "1b7ce2df-7359-4bcf-b497-a9546a3ddf93",
                "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "03f7c69d-619a-4fd4-8568-a320c000acec",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "Get all dirs in project and test for empty",
                "fullTitle": "Feature - directories:  Get directories Get all dirs in project and test for empty",
                "timedOut": false,
                "duration": 188,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "1b09d378-c940-47c4-ab5e-01b8c316ccb1",
                "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
                "skipped": false
              },
              {
                "title": "Subdir exists and test for empty",
                "fullTitle": "Feature - directories:  Get directories Subdir exists and test for empty",
                "timedOut": false,
                "duration": 270,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "3d02bee2-49ee-45d4-85b0-eb3599941c07",
                "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
                "skipped": false
              },
              {
                "title": "Get sub-directories as peer_directories",
                "fullTitle": "Feature - directories:  Get directories Get sub-directories as peer_directories",
                "timedOut": false,
                "duration": 206,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "6318d1be-2635-4c28-99a1-38a03e948f33",
                "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
                "skipped": false
              },
              {
                "title": "Find in project",
                "fullTitle": "Feature - directories:  Get directories Find in project",
                "timedOut": false,
                "duration": 175,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "1b7ce2df-7359-4bcf-b497-a9546a3ddf93",
                "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 839
          },
          {
            "title": "Modifiy directories",
            "suites": [],
            "tests": [
              {
                "title": "Rename dir",
                "fullTitle": "Feature - directories:  Modifiy directories Rename dir",
                "timedOut": false,
                "duration": 140,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "bcaf311e-c198-42a9-90f4-9ebe85443a18",
                "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
                "skipped": false
              },
              {
                "title": "Move dir",
                "fullTitle": "Feature - directories:  Modifiy directories Move dir",
                "timedOut": false,
                "duration": 275,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "2b4f0d3c-14ee-4fcf-969b-664efa73685d",
                "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
                "skipped": false
              },
              {
                "title": "Delete dir",
                "fullTitle": "Feature - directories:  Modifiy directories Delete dir",
                "timedOut": false,
                "duration": 151,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "5da9b3bc-70e1-4c76-ae45-c3e5defd189f",
                "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/directories-spec.js",
            "uuid": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
            "passes": [
              {
                "title": "Rename dir",
                "fullTitle": "Feature - directories:  Modifiy directories Rename dir",
                "timedOut": false,
                "duration": 140,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "bcaf311e-c198-42a9-90f4-9ebe85443a18",
                "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
                "skipped": false
              },
              {
                "title": "Move dir",
                "fullTitle": "Feature - directories:  Modifiy directories Move dir",
                "timedOut": false,
                "duration": 275,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "2b4f0d3c-14ee-4fcf-969b-664efa73685d",
                "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
                "skipped": false
              },
              {
                "title": "Delete dir",
                "fullTitle": "Feature - directories:  Modifiy directories Delete dir",
                "timedOut": false,
                "duration": 151,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "5da9b3bc-70e1-4c76-ae45-c3e5defd189f",
                "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 566
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/specs/directories-spec.js",
        "uuid": "045a20a1-f20f-472c-bbed-f93387a4e7c6",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/directories-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - processes: ",
        "suites": [
          {
            "title": "Function level",
            "suites": [],
            "tests": [
              {
                "title": "feature level",
                "fullTitle": "Feature - processes:  Function level feature level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "ec688e56-d028-4fbc-8edf-a2d52f065a21",
                "parentUUID": "30455688-68de-43b2-acc6-4943e81c855d",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "feature level",
                "fullTitle": "Feature - processes:  Function level feature level",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "ec688e56-d028-4fbc-8edf-a2d52f065a21",
                "parentUUID": "30455688-68de-43b2-acc6-4943e81c855d",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/processes-spec.js",
            "uuid": "30455688-68de-43b2-acc6-4943e81c855d",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/processes-spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/specs/processes-spec.js",
        "uuid": "e130f348-fed6-41e9-898b-a28d899bb7ae",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/processes-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - projects: ",
        "suites": [
          {
            "title": "Create project",
            "suites": [],
            "tests": [
              {
                "title": "create project and get project back",
                "fullTitle": "Feature - projects:  Create project create project and get project back",
                "timedOut": false,
                "duration": 67,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "1758e0bd-1d0c-42a0-a1c0-db854ecdcff8",
                "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
                "skipped": false
              },
              {
                "title": "create project and find project in all projects",
                "fullTitle": "Feature - projects:  Create project create project and find project in all projects",
                "timedOut": false,
                "duration": 86,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "b30cc4c2-7477-4744-9918-5c4f80fec4d5",
                "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
                "skipped": false
              },
              {
                "title": "create project and find project by user",
                "fullTitle": "Feature - projects:  Create project create project and find project by user",
                "timedOut": false,
                "duration": 83,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "47a8335e-1b49-4456-b943-e3dac86d0f29",
                "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
                "skipped": false
              },
              {
                "title": "create project, find by user, has full set of properties",
                "fullTitle": "Feature - projects:  Create project create project, find by user, has full set of properties",
                "timedOut": false,
                "duration": 88,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "88da26b6-7a75-460a-a720-e4c84ad1fc51",
                "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/projects-spec.js",
            "uuid": "d379217f-d065-4044-b21f-0557b7e069f5",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/projects-spec.js",
            "passes": [
              {
                "title": "create project and get project back",
                "fullTitle": "Feature - projects:  Create project create project and get project back",
                "timedOut": false,
                "duration": 67,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "1758e0bd-1d0c-42a0-a1c0-db854ecdcff8",
                "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
                "skipped": false
              },
              {
                "title": "create project and find project in all projects",
                "fullTitle": "Feature - projects:  Create project create project and find project in all projects",
                "timedOut": false,
                "duration": 86,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "b30cc4c2-7477-4744-9918-5c4f80fec4d5",
                "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
                "skipped": false
              },
              {
                "title": "create project and find project by user",
                "fullTitle": "Feature - projects:  Create project create project and find project by user",
                "timedOut": false,
                "duration": 83,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "47a8335e-1b49-4456-b943-e3dac86d0f29",
                "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
                "skipped": false
              },
              {
                "title": "create project, find by user, has full set of properties",
                "fullTitle": "Feature - projects:  Create project create project, find by user, has full set of properties",
                "timedOut": false,
                "duration": 88,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "88da26b6-7a75-460a-a720-e4c84ad1fc51",
                "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 324
          },
          {
            "title": "Update project",
            "suites": [],
            "tests": [
              {
                "title": "create project, update name and description",
                "fullTitle": "Feature - projects:  Update project create project, update name and description",
                "timedOut": false,
                "duration": 89,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "91674afc-7d13-4608-bd9a-bb5e29daa20e",
                "parentUUID": "ddca946d-facd-427e-9fe0-2283e19fa314",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/projects-spec.js",
            "uuid": "ddca946d-facd-427e-9fe0-2283e19fa314",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/projects-spec.js",
            "passes": [
              {
                "title": "create project, update name and description",
                "fullTitle": "Feature - projects:  Update project create project, update name and description",
                "timedOut": false,
                "duration": 89,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "91674afc-7d13-4608-bd9a-bb5e29daa20e",
                "parentUUID": "ddca946d-facd-427e-9fe0-2283e19fa314",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 89
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/specs/projects-spec.js",
        "uuid": "57281fd2-ad55-4517-b81d-c1025052ba34",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/projects-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Feature - reset lost password: ",
        "suites": [
          {
            "title": "User with reset_password flag",
            "suites": [],
            "tests": [
              {
                "title": "there is a user for testing",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag there is a user for testing",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "4fb2a42c-ae19-48ce-b07c-f0c8a7a324cb",
                "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
                "skipped": false
              },
              {
                "title": "User with the reset password flag set",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User with the reset password flag set",
                "timedOut": false,
                "duration": 23,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "00aea6ee-57e4-4de2-9541-b298449a48ad",
                "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
                "skipped": false
              },
              {
                "title": "User reset password flag is cleared",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User reset password flag is cleared",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "3d7c73cc-865f-4234-900d-a2a57315f68c",
                "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/backend/tests/mcapi/specs/reset-lost-password-spec.js",
            "uuid": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
            "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/reset-lost-password-spec.js",
            "passes": [
              {
                "title": "there is a user for testing",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag there is a user for testing",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "4fb2a42c-ae19-48ce-b07c-f0c8a7a324cb",
                "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
                "skipped": false
              },
              {
                "title": "User with the reset password flag set",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User with the reset password flag set",
                "timedOut": false,
                "duration": 23,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "00aea6ee-57e4-4de2-9541-b298449a48ad",
                "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
                "skipped": false
              },
              {
                "title": "User reset password flag is cleared",
                "fullTitle": "Feature - reset lost password:  User with reset_password flag User reset password flag is cleared",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
                "isRoot": false,
                "uuid": "3d7c73cc-865f-4234-900d-a2a57315f68c",
                "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 58
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/backend/tests/mcapi/specs/reset-lost-password-spec.js",
        "uuid": "be5e52f1-0275-47f9-bb55-5e2f99053306",
        "fullFile": "/Users/weymouth/working/MaterialsCommons/workspace/src/github.com/materials-commons/materialscommons.org/backend/tests/mcapi/specs/reset-lost-password-spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "ab658e32-ca06-4043-8d41-886b957f734f",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "fetch top level directory from project",
      "fullTitle": "Top level directory fetch top level directory from project",
      "timedOut": false,
      "duration": 110,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "0deb3ea7-ebfc-4509-a7e1-774cfc8bbebf",
      "parentUUID": "3106cc0f-484a-41bf-9e3a-dd7283d2d512",
      "skipped": false
    },
    {
      "title": "fetch top level directory by id",
      "fullTitle": "Top level directory fetch top level directory by id",
      "timedOut": false,
      "duration": 80,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "266d6a03-8789-473f-8130-6746ac2d3fb0",
      "parentUUID": "3106cc0f-484a-41bf-9e3a-dd7283d2d512",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as /",
      "fullTitle": "Create directory create directory path from top directory as /",
      "timedOut": false,
      "duration": 258,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "bddabca0-2920-485b-82d8-6647f761b571",
      "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as id",
      "fullTitle": "Create directory create directory path from top directory as id",
      "timedOut": false,
      "duration": 177,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "a411e1b3-053b-4dfa-a5db-0b5a3fa92e6e",
      "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
      "skipped": false
    },
    {
      "title": "create directory path from directory as path",
      "fullTitle": "Create directory create directory path from directory as path",
      "timedOut": false,
      "duration": 242,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "92dcf1fd-c614-437a-a792-faf1244349d0",
      "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
      "skipped": false
    },
    {
      "title": "Get all dirs in project and test for empty",
      "fullTitle": "Get directories Get all dirs in project and test for empty",
      "timedOut": false,
      "duration": 188,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "d073b84b-0fea-4c51-acb1-ccd421e63db9",
      "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
      "skipped": false
    },
    {
      "title": "Subdir exists and test for empty",
      "fullTitle": "Get directories Subdir exists and test for empty",
      "timedOut": false,
      "duration": 270,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "7156bfed-f2be-44f0-9b95-44f5c87dbd13",
      "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
      "skipped": false
    },
    {
      "title": "Get sub-directories as peer_directories",
      "fullTitle": "Get directories Get sub-directories as peer_directories",
      "timedOut": false,
      "duration": 206,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "ed5d0b44-f600-44a2-b77b-da490d3273a4",
      "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
      "skipped": false
    },
    {
      "title": "Find in project",
      "fullTitle": "Get directories Find in project",
      "timedOut": false,
      "duration": 175,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "24585b26-3abb-470b-b922-815bb0eec438",
      "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
      "skipped": false
    },
    {
      "title": "Rename dir",
      "fullTitle": "Modifiy directories Rename dir",
      "timedOut": false,
      "duration": 140,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "f807e78c-c039-406e-8e0c-5f5964984eb4",
      "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
      "skipped": false
    },
    {
      "title": "Move dir",
      "fullTitle": "Modifiy directories Move dir",
      "timedOut": false,
      "duration": 275,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "42efaf63-7e79-4358-b817-a776aa3e7c4b",
      "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
      "skipped": false
    },
    {
      "title": "Delete dir",
      "fullTitle": "Modifiy directories Delete dir",
      "timedOut": false,
      "duration": 151,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "e5b0ce74-43bc-4ff7-b256-29eb25081423",
      "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
      "skipped": false
    },
    {
      "title": "feature level",
      "fullTitle": "Function level feature level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "d8aab910-e9cc-4297-bdbc-3e9562f30e73",
      "parentUUID": "30455688-68de-43b2-acc6-4943e81c855d",
      "skipped": false
    },
    {
      "title": "create project and get project back",
      "fullTitle": "Create project create project and get project back",
      "timedOut": false,
      "duration": 67,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "ae446b27-56f3-4317-9951-ac6be22a645b",
      "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
      "skipped": false
    },
    {
      "title": "create project and find project in all projects",
      "fullTitle": "Create project create project and find project in all projects",
      "timedOut": false,
      "duration": 86,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "4ee415d0-3531-43fa-a9f0-53f5f859918d",
      "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
      "skipped": false
    },
    {
      "title": "create project and find project by user",
      "fullTitle": "Create project create project and find project by user",
      "timedOut": false,
      "duration": 83,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "82a435b6-9321-4abe-865c-ce8925bd7be7",
      "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
      "skipped": false
    },
    {
      "title": "create project, find by user, has full set of properties",
      "fullTitle": "Create project create project, find by user, has full set of properties",
      "timedOut": false,
      "duration": 88,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "5bb0eb63-23ca-4867-a77e-f787e671ed3d",
      "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
      "skipped": false
    },
    {
      "title": "create project, update name and description",
      "fullTitle": "Update project create project, update name and description",
      "timedOut": false,
      "duration": 89,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "4b461adb-79ec-42e5-9a86-b26e56316a2f",
      "parentUUID": "ddca946d-facd-427e-9fe0-2283e19fa314",
      "skipped": false
    },
    {
      "title": "there is a user for testing",
      "fullTitle": "User with reset_password flag there is a user for testing",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "50433c3e-1d39-4539-bca4-473b7ed669f6",
      "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
      "skipped": false
    },
    {
      "title": "User with the reset password flag set",
      "fullTitle": "User with reset_password flag User with the reset password flag set",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "441192b4-4f8a-4197-8e17-71477f455027",
      "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
      "skipped": false
    },
    {
      "title": "User reset password flag is cleared",
      "fullTitle": "User with reset_password flag User reset password flag is cleared",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "d0dc3e0b-efb4-48bd-b09b-0350213c6d0f",
      "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
      "skipped": false
    }
  ],
  "allPending": [
    {
      "title": "feature level",
      "fullTitle": "Function level feature level",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "2756b7cd-97c5-4480-b93d-a40fa1948a18",
      "parentUUID": "30455688-68de-43b2-acc6-4943e81c855d",
      "skipped": false
    }
  ],
  "allPasses": [
    {
      "title": "fetch top level directory from project",
      "fullTitle": "Top level directory fetch top level directory from project",
      "timedOut": false,
      "duration": 110,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project, project_id, top_directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            _context2.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context2.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            project_id = project.id;<br>                            _context2.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            top_directory = _context2.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, found_project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "428acd59-558a-4526-9598-5a89ce71cb3c",
      "parentUUID": "3106cc0f-484a-41bf-9e3a-dd7283d2d512",
      "skipped": false
    },
    {
      "title": "fetch top level directory by id",
      "fullTitle": "Top level directory fetch top level directory by id",
      "timedOut": false,
      "duration": 80,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, directory_id, directory;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context3.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                            directory_id = top_directory.id;<br>                            _context3.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            directory = _context3.sent;<br>                            assert.equal(top_directory.otype, <span class=\"hljs-string\">\"directory\"</span>);<br>                            assert.equal(top_directory.name, project.name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "d0f2dc2d-66d9-4db5-9b8e-97ad39badb1b",
      "parentUUID": "3106cc0f-484a-41bf-9e3a-dd7283d2d512",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as /",
      "fullTitle": "Create directory create directory path from top directory as /",
      "timedOut": false,
      "duration": 258,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context4.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context4.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context4.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "8ef4a5d4-0226-4fc6-b4be-87d81eb46d6d",
      "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
      "skipped": false
    },
    {
      "title": "create directory path from top directory as id",
      "fullTitle": "Create directory create directory path from top directory as id",
      "timedOut": false,
      "duration": 177,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context5.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: top_directory.id,<br>                                path: path<br>                            };<br>                            _context5.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context5.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">25</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "0ce0f974-c7bd-4a2a-a5e7-68a80321b8e6",
      "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
      "skipped": false
    },
    {
      "title": "create directory path from directory as path",
      "fullTitle": "Create directory create directory path from directory as path",
      "timedOut": false,
      "duration": 242,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context6.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context6.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            from_dir = from_dir + path;<br>                            path = <span class=\"hljs-string\">\"D1/E1\"</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            result = _context6.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1/D1/E1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "53a31c9b-1255-47df-a603-3ca2964a87a2",
      "parentUUID": "be5f8fac-cf32-4ac8-89f4-55774d2d7f2e",
      "skipped": false
    },
    {
      "title": "Get all dirs in project and test for empty",
      "fullTitle": "Get directories Get all dirs in project and test for empty",
      "timedOut": false,
      "duration": 188,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee7$</span>(<span class=\"hljs-params\">_context7</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context7.prev = _context7.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context7.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context7.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context7.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context7.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context7.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context7.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context7.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context7.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            dir_list = _context7.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">4</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">3</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            _context7.t0 = assert;<br>                            _context7.next = <span class=\"hljs-number\">36</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">0</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">36</span>:<br>                            _context7.t1 = _context7.sent;<br>                            _context7.t0.isFalse.call(_context7.t0, _context7.t1);<br>                            _context7.t2 = assert;<br>                            _context7.next = <span class=\"hljs-number\">41</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                            _context7.t3 = _context7.sent;<br>                            _context7.t2.isFalse.call(_context7.t2, _context7.t3);<br>                            _context7.t4 = assert;<br>                            _context7.next = <span class=\"hljs-number\">46</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">2</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">46</span>:<br>                            _context7.t5 = _context7.sent;<br>                            _context7.t4.isFalse.call(_context7.t4, _context7.t5);<br>                            _context7.t6 = assert;<br>                            _context7.next = <span class=\"hljs-number\">51</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(dir_list[<span class=\"hljs-number\">3</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">51</span>:<br>                            _context7.t7 = _context7.sent;<br>                            _context7.t6.isTrue.call(_context7.t6, _context7.t7);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">53</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context7.stop();<br>                    }<br>                }<br>            }, _callee7, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "1d56a17d-9765-4fd7-910a-e0555901e643",
      "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
      "skipped": false
    },
    {
      "title": "Subdir exists and test for empty",
      "fullTitle": "Get directories Subdir exists and test for empty",
      "timedOut": false,
      "duration": 270,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory, subdir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee8$</span>(<span class=\"hljs-params\">_context8</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context8.prev = _context8.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context8.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context8.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context8.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context8.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context8.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context8.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context8.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context8.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context8.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.subdirExists(directory.id, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context8.sent;<br>                            subdir = result[<span class=\"hljs-number\">0</span>];<br>                            assert.equal(subdir.name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(subdir.parent, directory.id);<br>                            _context8.t0 = assert;<br>                            _context8.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            _context8.t1 = _context8.sent;<br>                            _context8.t0.isFalse.call(_context8.t0, _context8.t1);<br>                            _context8.t2 = assert;<br>                            _context8.next = <span class=\"hljs-number\">39</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.isEmpty(subdir.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">39</span>:<br>                            _context8.t3 = _context8.sent;<br>                            _context8.t2.isTrue.call(_context8.t2, _context8.t3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">41</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context8.stop();<br>                    }<br>                }<br>            }, _callee8, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "4905f938-3565-4250-82c4-72f35ade2c12",
      "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
      "skipped": false
    },
    {
      "title": "Get sub-directories as peer_directories",
      "fullTitle": "Get directories Get sub-directories as peer_directories",
      "timedOut": false,
      "duration": 206,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, path3, dir_args1, dir_args2, dir_args3, result, dir_list, directory, dir_with_subs, subs, expected, missing;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee9$</span>(<span class=\"hljs-params\">_context9</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context9.prev = _context9.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context9.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context9.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context9.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context9.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context9.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context9.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            path3 = <span class=\"hljs-string\">'A1/D1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            dir_args3 = {<br>                                from_dir: from_dir,<br>                                path: path3<br>                            };<br>                            _context9.next = <span class=\"hljs-number\">22</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">22</span>:<br>                            _context9.next = <span class=\"hljs-number\">24</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">24</span>:<br>                            _context9.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args3);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            result = _context9.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/D1'</span>);<br>                            directory = dir_list[<span class=\"hljs-number\">0</span>];<br>                            _context9.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.peerDirectories(directory.id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            dir_with_subs = _context9.sent;<br>                            assert.equal(dir_with_subs.name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_with_subs.name, directory.name);<br>                            assert.equal(dir_with_subs.id, directory.id);<br>                            assert.isTrue(dir_with_subs.hasOwnProperty(<span class=\"hljs-string\">'peer_directories'</span>));<br>                            subs = dir_with_subs.peer_directories;<br>                            expected = [project_name + <span class=\"hljs-string\">\"/\"</span> + path1, project_name + <span class=\"hljs-string\">\"/\"</span> + path2, project_name + <span class=\"hljs-string\">\"/\"</span> + path3];<br>                            missing = [];<br>                            expected.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target</span>) </span>{<br>                                <span class=\"hljs-keyword\">var</span> found = <span class=\"hljs-literal\">false</span>;<br>                                subs.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dir</span>) </span>{<br>                                    <span class=\"hljs-keyword\">if</span> (dir.name == target) {<br>                                        found = <span class=\"hljs-literal\">true</span>;<br>                                    }<br>                                });<br>                                <span class=\"hljs-keyword\">if</span> (!found) missing.push(target);<br>                            });<br>                            assert.deepEqual(missing, [], <span class=\"hljs-string\">\"Should be empty list of missing expected values\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">45</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context9.stop();<br>                    }<br>                }<br>            }, _callee9, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "08099e9f-af47-4548-9c42-be59be66fd58",
      "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
      "skipped": false
    },
    {
      "title": "Find in project",
      "fullTitle": "Get directories Find in project",
      "timedOut": false,
      "duration": 175,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, cross;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee10$</span>(<span class=\"hljs-params\">_context10</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context10.prev = _context10.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context10.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context10.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context10.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context10.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context10.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context10.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1/B1/C1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context10.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context10.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">3</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">2</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1/C1'</span>);<br>                            <span class=\"hljs-comment\">// it appears from the code that case 1 does not work!</span><br>                            <span class=\"hljs-comment\">// let dir1 = yield directories.findInProject(project_id,'','/A1/B1');</span><br>                            _context10.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.findInProject(project_id, <span class=\"hljs-string\">''</span>, dir_list[<span class=\"hljs-number\">1</span>].id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            cross = _context10.sent;<br>                            assert.isNotNull(cross);<br>                            assert.equal(cross.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(cross[<span class=\"hljs-number\">0</span>].project_id, project_id);<br>                            <span class=\"hljs-comment\">//            console.log(cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            let dir2 = yield directories.get(project_id,cross[0].datadir_id);</span><br>                            <span class=\"hljs-comment\">//            console.log(dir2.name);</span><br>                            <span class=\"hljs-comment\">//            assert.equal(dir2.name,project_name + '/A1/B1');</span><br>                            <span class=\"hljs-comment\">//            assert.isFalse(yield directories.isEmpty(dir2.id));</span><br>                            <span class=\"hljs-comment\">//            let child1 = dir2.children[0];</span><br>                            <span class=\"hljs-comment\">//            assert.equal(child1.name,project_name + '/A1/B1/C1');</span><br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context10.stop();<br>                    }<br>                }<br>            }, _callee10, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "092c7a45-c305-4d26-96e5-7e49a03b4229",
      "parentUUID": "03f7c69d-619a-4fd4-8568-a320c000acec",
      "skipped": false
    },
    {
      "title": "Rename dir",
      "fullTitle": "Modifiy directories Rename dir",
      "timedOut": false,
      "duration": 140,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, name, directory_id, rename_args, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee11$</span>(<span class=\"hljs-params\">_context11</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context11.prev = _context11.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context11.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context11.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context11.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context11.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context11.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context11.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context11.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            name = project_name + <span class=\"hljs-string\">'/XX'</span>;<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            rename_args = {<br>                                rename: {<br>                                    new_name: name<br>                                }<br>                            };<br>                            _context11.next = <span class=\"hljs-number\">28</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, directory_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">28</span>:<br>                            _context11.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir = _context11.sent;<br>                            assert.equal(dir.path, name);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">32</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context11.stop();<br>                    }<br>                }<br>            }, _callee11, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "1d2513e6-48d1-4d11-aa62-87c8b0e40531",
      "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
      "skipped": false
    },
    {
      "title": "Move dir",
      "fullTitle": "Modifiy directories Move dir",
      "timedOut": false,
      "duration": 275,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path1, path2, dir_args1, dir_args2, result, dir_list, dir1_id, dir2_id, rename_args, dir3;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee12$</span>(<span class=\"hljs-params\">_context12</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context12.prev = _context12.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context12.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context12.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context12.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context12.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context12.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context12.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path1 = <span class=\"hljs-string\">'A1/B1'</span>;<br>                            path2 = <span class=\"hljs-string\">'A1/C1'</span>;<br>                            dir_args1 = {<br>                                from_dir: from_dir,<br>                                path: path1<br>                            };<br>                            dir_args2 = {<br>                                from_dir: from_dir,<br>                                path: path2<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">20</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args1);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">20</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/B1'</span>);<br>                            dir1_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            _context12.next = <span class=\"hljs-number\">27</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args2);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">27</span>:<br>                            result = _context12.sent;<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">1</span>].name, project_name + <span class=\"hljs-string\">'/A1/C1'</span>);<br>                            dir2_id = dir_list[<span class=\"hljs-number\">1</span>].id;<br>                            rename_args = {<br>                                move: {<br>                                    new_directory_id: dir2_id<br>                                }<br>                            };<br>                            _context12.next = <span class=\"hljs-number\">35</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.update(project_id, dir1_id, rename_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">35</span>:<br>                            ret = _context12.sent;<br>                            dir3 = ret.val;<br>                            assert.equal(dir3.path, project_name + <span class=\"hljs-string\">'/A1/C1/B1'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context12.stop();<br>                    }<br>                }<br>            }, _callee12, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "43bad06a-d9c6-448e-bf8b-8a2834e9acdf",
      "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
      "skipped": false
    },
    {
      "title": "Delete dir",
      "fullTitle": "Modifiy directories Delete dir",
      "timedOut": false,
      "duration": 151,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_id, top_directory, from_dir, path, dir_args, result, dir_list, directory_id, dir;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee13$</span>(<span class=\"hljs-params\">_context13</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context13.prev = _context13.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context13.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context13.sent;<br>                            project_name = random_name();<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context13.next = <span class=\"hljs-number\">7</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">7</span>:<br>                            ret = _context13.sent;<br>                            project = ret.val;<br>                            project_id = project.id;<br>                            _context13.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, <span class=\"hljs-string\">'top'</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            top_directory = _context13.sent;<br>                            from_dir = <span class=\"hljs-string\">'/'</span>;<br>                            path = <span class=\"hljs-string\">'A1'</span>;<br>                            dir_args = {<br>                                from_dir: from_dir,<br>                                path: path<br>                            };<br>                            _context13.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.create(project_id, project_name, dir_args);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            result = _context13.sent;<br>                            assert.isTrue(result.hasOwnProperty(<span class=\"hljs-string\">'val'</span>));<br>                            dir_list = result.val;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(dir_list[<span class=\"hljs-number\">0</span>].name, project_name + <span class=\"hljs-string\">'/A1'</span>);<br>                            directory_id = dir_list[<span class=\"hljs-number\">0</span>].id;<br>                            _context13.next = <span class=\"hljs-number\">26</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.get(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">26</span>:<br>                            dir = _context13.sent;<br>                            assert.isNotNull(dir);<br>                            _context13.next = <span class=\"hljs-number\">30</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">30</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">2</span>);<br>                            _context13.next = <span class=\"hljs-number\">34</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.remove(project_id, directory_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">34</span>:<br>                            ret = _context13.sent;<br>                            assert.isTrue(ret.val);<br>                            _context13.next = <span class=\"hljs-number\">38</span>;<br>                            <span class=\"hljs-keyword\">return</span> directories.getAll(project_id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">38</span>:<br>                            dir_list = _context13.sent;<br>                            assert.equal(dir_list.length, <span class=\"hljs-number\">1</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">40</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context13.stop();<br>                    }<br>                }<br>            }, _callee13, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "39b119af-cc37-4478-9114-327e3eac3f08",
      "parentUUID": "223ce8b4-abac-4f35-ab89-61d97dc5e073",
      "skipped": false
    },
    {
      "title": "create project and get project back",
      "fullTitle": "Create project create project and get project back",
      "timedOut": false,
      "duration": 67,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context2.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context2.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user.id);<br>                            assert.equal(project.owner, user1Id);<br>                            assert.equal(project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "067f249c-0c63-49d4-952e-6c154c25a2b4",
      "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
      "skipped": false
    },
    {
      "title": "create project and find project in all projects",
      "fullTitle": "Create project create project and find project in all projects",
      "timedOut": false,
      "duration": 86,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context3.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context3.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context3.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.all();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context3.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "eb02b574-174b-4418-9f57-efd63439702c",
      "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
      "skipped": false
    },
    {
      "title": "create project and find project by user",
      "fullTitle": "Create project create project and find project by user",
      "timedOut": false,
      "duration": 83,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context4.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context4.sent;<br>                            project = ret.val;<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.users[<span class=\"hljs-number\">0</span>].user_id, user1Id);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            project_list = _context4.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            <span class=\"hljs-comment\">// <span class=\"hljs-doctag\">NOTE:</span> field is user, here, but user_id in test above!!!</span><br>                            <span class=\"hljs-comment\">// is this the correct behaivor???</span><br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "df53f3a3-7437-434b-820a-ad414750c2b5",
      "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
      "skipped": false
    },
    {
      "title": "create project, find by user, has full set of properties",
      "fullTitle": "Create project create project, find by user, has full set of properties",
      "timedOut": false,
      "duration": 88,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, project_list, found_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee5$</span>(<span class=\"hljs-params\">_context5</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context5.prev = _context5.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context5.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context5.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context5.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context5.sent;<br>                            project = ret.val;<br>                            _context5.next = <span class=\"hljs-number\">12</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.forUser(user);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">12</span>:<br>                            project_list = _context5.sent;<br>                            found_project = <span class=\"hljs-literal\">null</span>;<br>                            project_list.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) </span>{<br>                                <span class=\"hljs-keyword\">if</span> (p.name == project_name) {<br>                                    found_project = p;<br>                                }<br>                            });<br>                            assert.isNotNull(found_project);<br>                            assert.equal(found_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(found_project.owner, user.id);<br>                            assert.equal(found_project.owner, user1Id);<br>                            assert.equal(found_project.users.length, <span class=\"hljs-number\">1</span>);<br>                            assert.equal(found_project.users[<span class=\"hljs-number\">0</span>].user, user1Id);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'events'</span>));<br>                            assert.equal(found_project.events.length, <span class=\"hljs-number\">0</span>);<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'processes'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'samples'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'files'</span>));<br>                            assert.isTrue(found_project.hasOwnProperty(<span class=\"hljs-string\">'experiments'</span>));<br>                            assert.equal(found_project.processes, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.samples, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.files, <span class=\"hljs-number\">0</span>);<br>                            assert.equal(found_project.experiments, <span class=\"hljs-number\">0</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">31</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context5.stop();<br>                    }<br>                }<br>            }, _callee5, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "0307a003-50bf-480a-935d-27d063ac723a",
      "parentUUID": "d379217f-d065-4044-b21f-0557b7e069f5",
      "skipped": false
    },
    {
      "title": "create project, update name and description",
      "fullTitle": "Update project create project, update name and description",
      "timedOut": false,
      "duration": 89,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, project_name, attrs, ret, project, name, description, update_attrs, updated_project;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee6$</span>(<span class=\"hljs-params\">_context6</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context6.prev = _context6.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context6.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context6.sent;<br>                            project_name = random_name();<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user exists\"</span>);<br>                            attrs = {<br>                                name: project_name,<br>                                description: <span class=\"hljs-string\">\"This is a test project for automated testing.\"</span><br>                            };<br>                            _context6.next = <span class=\"hljs-number\">8</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.createProject(user, attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">8</span>:<br>                            ret = _context6.sent;<br>                            project = ret.val;<br>                            assert.equal(project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(project.name, project_name);<br>                            assert.equal(project.owner, user1Id);<br>                            name = <span class=\"hljs-string\">\"Another Name\"</span>;<br>                            description = <span class=\"hljs-string\">\"An alternate description\"</span>;<br>                            update_attrs = {<br>                                name: name,<br>                                description: description<br>                            };<br>                            _context6.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> projects.update(project.id, update_attrs);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            updated_project = _context6.sent;<br>                            assert.equal(updated_project.otype, <span class=\"hljs-string\">\"project\"</span>);<br>                            assert.equal(updated_project.owner, user1Id);<br>                            assert.equal(updated_project.name, name);<br>                            assert.equal(updated_project.description, description);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">23</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context6.stop();<br>                    }<br>                }<br>            }, _callee6, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "6ef374f9-a60c-48cb-8bed-ab1db5482435",
      "parentUUID": "ddca946d-facd-427e-9fe0-2283e19fa314",
      "skipped": false
    },
    {
      "title": "there is a user for testing",
      "fullTitle": "User with reset_password flag there is a user for testing",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee2$</span>(<span class=\"hljs-params\">_context2</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context2.prev = _context2.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context2.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context2.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context2.stop();<br>                    }<br>                }<br>            }, _callee2, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "6a848425-bec6-4f27-90bb-c42087351352",
      "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
      "skipped": false
    },
    {
      "title": "User with the reset password flag set",
      "fullTitle": "User with reset_password flag User with the reset password flag set",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, validate_uuid, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee3$</span>(<span class=\"hljs-params\">_context3</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context3.prev = _context3.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context3.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context3.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> r.uuid();<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            validate_uuid = _context3.sent;<br>                            _context3.next = <span class=\"hljs-number\">9</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">9</span>:<br>                            result = _context3.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context3.next = <span class=\"hljs-number\">13</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">13</span>:<br>                            user = _context3.sent;<br>                            assert.isTrue(user.reset_password, <span class=\"hljs-string\">\"The flag is set\"</span>);<br>                            assert.equal(user.validate_uuid, validate_uuid);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">16</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context3.stop();<br>                    }<br>                }<br>            }, _callee3, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "52d649ba-b96b-4be5-a2f0-6500c65b77cc",
      "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
      "skipped": false
    },
    {
      "title": "User reset password flag is cleared",
      "fullTitle": "User with reset_password flag User reset password flag is cleared",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4</span>(<span class=\"hljs-params\"></span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> user, result;<br>            <span class=\"hljs-keyword\">return</span> _regenerator2.default.wrap(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_callee4$</span>(<span class=\"hljs-params\">_context4</span>) </span>{<br>                <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>) {<br>                    <span class=\"hljs-keyword\">switch</span> (_context4.prev = _context4.next) {<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                            _context4.next = <span class=\"hljs-number\">2</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                            user = _context4.sent;<br>                            assert.isNotNull(user, <span class=\"hljs-string\">\"test user is not null\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">6</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.setUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">6</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly added to the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">10</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">10</span>:<br>                            user = _context4.sent;<br>                            assert.isTrue(user.reset_password);<br>                            _context4.next = <span class=\"hljs-number\">14</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.clearUserPasswordResetFlag(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">14</span>:<br>                            result = _context4.sent;<br>                            assert.equal(result.replaced, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"The flag was correctly cleared from the user\"</span>);<br>                            _context4.next = <span class=\"hljs-number\">18</span>;<br>                            <span class=\"hljs-keyword\">return</span> dbModelUsers.getUser(user1Id);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">18</span>:<br>                            user = _context4.sent;<br>                            assert.isUndefined(user.reset_password, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                            assert.isUndefined(user.validate_uuid, <span class=\"hljs-string\">\"The flag is cleared\"</span>);<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">21</span>:<br>                        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'end'</span>:<br>                            <span class=\"hljs-keyword\">return</span> _context4.stop();<br>                    }<br>                }<br>            }, _callee4, <span class=\"hljs-keyword\">this</span>);",
      "isRoot": false,
      "uuid": "ecf7ea32-5104-4180-be64-b6004f5f3639",
      "parentUUID": "cc1f94ab-f707-488c-b9f4-035c3b040eb6",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}